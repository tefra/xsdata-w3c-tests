from output.models.common.xsts_xsd.xlink import TypeType
from output.models.common.xsts_xsd.xsts import Annotation
from output.models.common.xsts_xsd.xsts import Current
from output.models.common.xsts_xsd.xsts import Documentation
from output.models.common.xsts_xsd.xsts import DocumentationReference
from output.models.common.xsts_xsd.xsts import Expected
from output.models.common.xsts_xsd.xsts import ExpectedOutcome
from output.models.common.xsts_xsd.xsts import InstanceDocument
from output.models.common.xsts_xsd.xsts import InstanceTest
from output.models.common.xsts_xsd.xsts import SchemaDocument
from output.models.common.xsts_xsd.xsts import SchemaTest
from output.models.common.xsts_xsd.xsts import Status
from output.models.common.xsts_xsd.xsts import TestGroup
from output.models.common.xsts_xsd.xsts import TestSet
from xsdata.formats.dataclass.models.generics import AnyElement
from xsdata.models.datatype import XmlDate


obj = TestSet(
    annotation=[],
    test_group=[
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="human-targeted  annotation for an Identity-constraint Definition (valid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Annotations provide for human- and machine-targeted &#10;                             annotations of schema components.&#10;                              In the test the human-targeted annotation &#10;                             is provided for an Identity-constraint Definition.",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/annotation/annotation00101m/annotation00101m1.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="annotation00101m1",
                version=[],
                other_attributes={}
            ),
            instance_test=[
                InstanceTest(
                    annotation=[],
                    instance_document=InstanceDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/annotation/annotation00101m/annotation00101m1_p.xml",
                        other_attributes={}
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID,
                            version=[],
                            other_attributes={}
                        ),
                    ],
                    current=Current(
                        annotation=[],
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21),
                        bugzilla=None,
                        other_attributes={}
                    ),
                    prior=[],
                    name="Positive",
                    version=[],
                    other_attributes={}
                ),
            ],
            name="annotation00101m1",
            version=[],
            other_attributes={}
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="human-targeted misplaced annotation for an Identity-constraint Definition (invalid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Annotations provide for human- and machine-targeted &#10;                             annotations of schema components.&#10;                              In the test the human-targeted annotation &#10;                             is provided for an Identity-constraint Definition.&#10;                             The annotation is misplaced.",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/annotation/annotation00101m/annotation00101m2.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="annotation00101m2",
                version=[],
                other_attributes={}
            ),
            instance_test=[],
            name="annotation00101m2",
            version=[],
            other_attributes={}
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="human-targeted double annotation for an Identity-constraint Definition (invalid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Annotations provide for human- and machine-targeted &#10;                             annotations of schema components.&#10;                              In the test the human-targeted annotation &#10;                             is provided for an Identity-constraint Definition.&#10;                             The annotation is specified twice.",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/annotation/annotation00101m/annotation00101m3.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="annotation00101m3",
                version=[],
                other_attributes={}
            ),
            instance_test=[],
            name="annotation00101m3",
            version=[],
            other_attributes={}
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="machine-targeted  annotation for an Identity-constraint Definition (valid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Annotations provide for human- and machine-targeted &#10;                             annotations of schema components.&#10;                              In the test the machine-targeted annotation &#10;                             is provided for an Identity-constraint Definition.",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/annotation/annotation00101m/annotation00101m4.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="annotation00101m4",
                version=[],
                other_attributes={}
            ),
            instance_test=[
                InstanceTest(
                    annotation=[],
                    instance_document=InstanceDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/annotation/annotation00101m/annotation00101m4_p.xml",
                        other_attributes={}
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID,
                            version=[],
                            other_attributes={}
                        ),
                    ],
                    current=Current(
                        annotation=[],
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21),
                        bugzilla=None,
                        other_attributes={}
                    ),
                    prior=[],
                    name="Positive",
                    version=[],
                    other_attributes={}
                ),
            ],
            name="annotation00101m4",
            version=[],
            other_attributes={}
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="machine-targeted misplaced annotation for an Identity-constraint Definition (invalid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Annotations provide for human- and machine-targeted &#10;                             annotations of schema components.&#10;                              In the test the machine-targeted annotation &#10;                             is provided for an Identity-constraint Definition.&#10;                             The annotation is misplaced.",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/annotation/annotation00101m/annotation00101m5.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="annotation00101m5",
                version=[],
                other_attributes={}
            ),
            instance_test=[],
            name="annotation00101m5",
            version=[],
            other_attributes={}
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="machine-targeted double annotation for an Identity-constraint Definition (invalid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Annotations provide for human- and machine-targeted &#10;                             annotations of schema components.&#10;                              In the test the machine-targeted annotation &#10;                             is provided for an Identity-constraint Definition.&#10;                             The annotation is specified twice.",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/annotation/annotation00101m/annotation00101m6.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="annotation00101m6",
                version=[],
                other_attributes={}
            ),
            instance_test=[],
            name="annotation00101m6",
            version=[],
            other_attributes={}
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="fields may have different types (valid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Define a uniqueness constraint with fields of different types.",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00101m/fields00101m1.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="fields00101m1",
                version=[],
                other_attributes={}
            ),
            instance_test=[
                InstanceTest(
                    annotation=[],
                    instance_document=InstanceDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00101m/fields00101m1_p.xml",
                        other_attributes={}
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID,
                            version=[],
                            other_attributes={}
                        ),
                    ],
                    current=Current(
                        annotation=[],
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21),
                        bugzilla=None,
                        other_attributes={}
                    ),
                    prior=[],
                    name="Positive",
                    version=[],
                    other_attributes={}
                ),
            ],
            name="fields00101m1",
            version=[],
            other_attributes={}
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="values of the fields are checked for equality: &#10;type is decimal, values are 3.0 and -3 (valid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="The equality and inequality conditions appealed to in checking these &#10;                             constraints apply to the value of the fields selected, so that for example &#10;                             3.0 and 3 would be conflicting keys if they were both number, but &#10;                             non-conflicting if they were both strings, or one was a string and &#10;                             one a number.&#10;                              In the test the fields of type decimal have values 3.0 and &#10;                             -3.",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00201m/fields00201m1.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="fields00201m1",
                version=[],
                other_attributes={}
            ),
            instance_test=[
                InstanceTest(
                    annotation=[],
                    instance_document=InstanceDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00201m/fields00201m1_p.xml",
                        other_attributes={}
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID,
                            version=[],
                            other_attributes={}
                        ),
                    ],
                    current=Current(
                        annotation=[],
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21),
                        bugzilla=None,
                        other_attributes={}
                    ),
                    prior=[],
                    name="Positive",
                    version=[],
                    other_attributes={}
                ),
            ],
            name="fields00201m1",
            version=[],
            other_attributes={}
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="values of the fields are checked for equality: &#10;type is decimal, values are 3.0 and 3 (valid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="The equality and inequality conditions appealed to in checking these &#10;                             constraints apply to the value of the fields selected, so that for example &#10;                             3.0 and 3 would be conflicting keys if they were both number, but &#10;                             non-conflicting if they were both strings, or one was a string and &#10;                             one a number.&#10;                              In the test the fields of type decimal have values 3.0 and &#10;                             3.",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00201m/fields00201m2.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="fields00201m2",
                version=[],
                other_attributes={}
            ),
            instance_test=[
                InstanceTest(
                    annotation=[],
                    instance_document=InstanceDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00201m/fields00201m2_n.xml",
                        other_attributes={}
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID,
                            version=[],
                            other_attributes={}
                        ),
                    ],
                    current=Current(
                        annotation=[],
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21),
                        bugzilla=None,
                        other_attributes={}
                    ),
                    prior=[],
                    name="Negative",
                    version=[],
                    other_attributes={}
                ),
            ],
            name="fields00201m2",
            version=[],
            other_attributes={}
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="values of the fields are checked for equality: &#10;type is decimal, values are 3.0 and 3.0 (valid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="The equality and inequality conditions appealed to in checking these &#10;                             constraints apply to the value of the fields selected, so that for example &#10;                             3.0 and 3 would be conflicting keys if they were both number, but &#10;                             non-conflicting if they were both strings, or one was a string and &#10;                             one a number.&#10;                              In the test the fields of type decimal have values 3.0 and &#10;                             3.0.",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00201m/fields00201m3.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="fields00201m3",
                version=[],
                other_attributes={}
            ),
            instance_test=[
                InstanceTest(
                    annotation=[],
                    instance_document=InstanceDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00201m/fields00201m3_n.xml",
                        other_attributes={}
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID,
                            version=[],
                            other_attributes={}
                        ),
                    ],
                    current=Current(
                        annotation=[],
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21),
                        bugzilla=None,
                        other_attributes={}
                    ),
                    prior=[],
                    name="Negative",
                    version=[],
                    other_attributes={}
                ),
            ],
            name="fields00201m3",
            version=[],
            other_attributes={}
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="values of the fields are checked for equality: &#10;type is string, values are 3.0 and 3 (valid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="The equality and inequality conditions appealed to in checking these &#10;                             constraints apply to the value of the fields selected, so that for example &#10;                             3.0 and 3 would be conflicting keys if they were both number, but &#10;                             non-conflicting if they were both strings, or one was a string and &#10;                             one a number.&#10;                              In the test the fields of type string have values 3.0 and &#10;                             3.",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00201m/fields00201m4.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="fields00201m4",
                version=[],
                other_attributes={}
            ),
            instance_test=[
                InstanceTest(
                    annotation=[],
                    instance_document=InstanceDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00201m/fields00201m4_p.xml",
                        other_attributes={}
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID,
                            version=[],
                            other_attributes={}
                        ),
                    ],
                    current=Current(
                        annotation=[],
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21),
                        bugzilla=None,
                        other_attributes={}
                    ),
                    prior=[],
                    name="Positive",
                    version=[],
                    other_attributes={}
                ),
            ],
            name="fields00201m4",
            version=[],
            other_attributes={}
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="values of the fields are checked for equality: &#10;type is string, values are 3.0 and 3.0 (valid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="The equality and inequality conditions appealed to in checking these &#10;                             constraints apply to the value of the fields selected, so that for example &#10;                             3.0 and 3 would be conflicting keys if they were both number, but &#10;                             non-conflicting if they were both strings, or one was a string and &#10;                             one a number.&#10;                              In the test the fields of type string have values 3.0 and &#10;                             3.0.",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00201m/fields00201m5.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="fields00201m5",
                version=[],
                other_attributes={}
            ),
            instance_test=[
                InstanceTest(
                    annotation=[],
                    instance_document=InstanceDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00201m/fields00201m5_n.xml",
                        other_attributes={}
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID,
                            version=[],
                            other_attributes={}
                        ),
                    ],
                    current=Current(
                        annotation=[],
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21),
                        bugzilla=None,
                        other_attributes={}
                    ),
                    prior=[],
                    name="Negative",
                    version=[],
                    other_attributes={}
                ),
            ],
            name="fields00201m5",
            version=[],
            other_attributes={}
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="values of the fields are checked for equality: &#10;string(3.0) compares with decimal(-3) (valid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text='The equality and inequality conditions appealed to in checking these &#10;                             constraints apply to the value of the fields selected, so that for example &#10;                             3.0 and 3 would be conflicting keys if they were both number, but &#10;                             non-conflicting if they were both strings, or one was a string and &#10;                             one a number.&#10;                              In the test the first field of type string has value "3.0". The&#10;                             second field of type decimal has value "-3".',
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00202m/fields00202m1.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="fields00202m1",
                version=[],
                other_attributes={}
            ),
            instance_test=[
                InstanceTest(
                    annotation=[],
                    instance_document=InstanceDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00202m/fields00202m1_p.xml",
                        other_attributes={}
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID,
                            version=[],
                            other_attributes={}
                        ),
                    ],
                    current=Current(
                        annotation=[],
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21),
                        bugzilla=None,
                        other_attributes={}
                    ),
                    prior=[],
                    name="Positive",
                    version=[],
                    other_attributes={}
                ),
            ],
            name="fields00202m1",
            version=[],
            other_attributes={}
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="values of the fields are checked for equality: &#10;string(3.0) compares with decimal(3) (valid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text='The equality and inequality conditions appealed to in checking these &#10;                             constraints apply to the value of the fields selected, so that for example &#10;                             3.0 and 3 would be conflicting keys if they were both number, but &#10;                             non-conflicting if they were both strings, or one was a string and &#10;                             one a number.&#10;                              In the test the first field of type string has value "3.0". The&#10;                             second field of type decimal has value "3".',
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00202m/fields00202m2.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="fields00202m2",
                version=[],
                other_attributes={}
            ),
            instance_test=[
                InstanceTest(
                    annotation=[],
                    instance_document=InstanceDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00202m/fields00202m2_p.xml",
                        other_attributes={}
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID,
                            version=[],
                            other_attributes={}
                        ),
                    ],
                    current=Current(
                        annotation=[],
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21),
                        bugzilla=None,
                        other_attributes={}
                    ),
                    prior=[],
                    name="Positive",
                    version=[],
                    other_attributes={}
                ),
            ],
            name="fields00202m2",
            version=[],
            other_attributes={}
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="values of the fields are checked for equality: &#10;string(3.0) compares with decimal(3.0) (valid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text='The equality and inequality conditions appealed to in checking these &#10;                             constraints apply to the value of the fields selected, so that for example &#10;                             3.0 and 3 would be conflicting keys if they were both number, but &#10;                             non-conflicting if they were both strings, or one was a string and &#10;                             one a number.&#10;                              In the test the first field of type string has value "3.0". The&#10;                             second field of type decimal has value "3.0".',
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00202m/fields00202m3.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="fields00202m3",
                version=[],
                other_attributes={}
            ),
            instance_test=[
                InstanceTest(
                    annotation=[],
                    instance_document=InstanceDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00202m/fields00202m3_p.xml",
                        other_attributes={}
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID,
                            version=[],
                            other_attributes={}
                        ),
                    ],
                    current=Current(
                        annotation=[],
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21),
                        bugzilla=None,
                        other_attributes={}
                    ),
                    prior=[],
                    name="Positive",
                    version=[],
                    other_attributes={}
                ),
            ],
            name="fields00202m3",
            version=[],
            other_attributes={}
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="values of the fields are checked for equality: &#10;string(3.0) compares with string(3) (valid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text='The equality and inequality conditions appealed to in checking these &#10;                             constraints apply to the value of the fields selected, so that for example &#10;                             3.0 and 3 would be conflicting keys if they were both number, but &#10;                             non-conflicting if they were both strings, or one was a string and &#10;                             one a number.&#10;                              In the test the first field of type string has value "3.0". The&#10;                             second field of type string has value "3".',
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00202m/fields00202m4.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="fields00202m4",
                version=[],
                other_attributes={}
            ),
            instance_test=[
                InstanceTest(
                    annotation=[],
                    instance_document=InstanceDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00202m/fields00202m4_p.xml",
                        other_attributes={}
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID,
                            version=[],
                            other_attributes={}
                        ),
                    ],
                    current=Current(
                        annotation=[],
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21),
                        bugzilla=None,
                        other_attributes={}
                    ),
                    prior=[],
                    name="Positive",
                    version=[],
                    other_attributes={}
                ),
            ],
            name="fields00202m4",
            version=[],
            other_attributes={}
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="values of the fields are checked for equality: &#10;string(3.0) compares with string(3.0) (valid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text='The equality and inequality conditions appealed to in checking these &#10;                             constraints apply to the value of the fields selected, so that for example &#10;                             3.0 and 3 would be conflicting keys if they were both number, but &#10;                             non-conflicting if they were both strings, or one was a string and &#10;                             one a number.&#10;                              In the test the first field of type string has value "3.0". The&#10;                             second field of type string has value "3.0".',
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00202m/fields00202m5.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="fields00202m5",
                version=[],
                other_attributes={}
            ),
            instance_test=[
                InstanceTest(
                    annotation=[],
                    instance_document=InstanceDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00202m/fields00202m5_n.xml",
                        other_attributes={}
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID,
                            version=[],
                            other_attributes={}
                        ),
                    ],
                    current=Current(
                        annotation=[],
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21),
                        bugzilla=None,
                        other_attributes={}
                    ),
                    prior=[],
                    name="Negative",
                    version=[],
                    other_attributes={}
                ),
            ],
            name="fields00202m5",
            version=[],
            other_attributes={}
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="values of the fields are checked for equality: &#10;decimal(3.0) compares with decimal(-3) (valid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text='The equality and inequality conditions appealed to in checking these &#10;                             constraints apply to the value of the fields selected, so that for example &#10;                             3.0 and 3 would be conflicting keys if they were both number, but &#10;                             non-conflicting if they were both strings, or one was a string and &#10;                             one a number.&#10;                              In the test the fields have local type decimal and&#10;                             values "3.0" and "-3".',
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00203m/fields00203m1.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="fields00203m1",
                version=[],
                other_attributes={}
            ),
            instance_test=[
                InstanceTest(
                    annotation=[],
                    instance_document=InstanceDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00203m/fields00203m1_p.xml",
                        other_attributes={}
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID,
                            version=[],
                            other_attributes={}
                        ),
                    ],
                    current=Current(
                        annotation=[],
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21),
                        bugzilla=None,
                        other_attributes={}
                    ),
                    prior=[],
                    name="Positive",
                    version=[],
                    other_attributes={}
                ),
            ],
            name="fields00203m1",
            version=[],
            other_attributes={}
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="values of the fields are checked for equality: &#10;decimal(3.0) compares with decimal(3) (valid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text='The equality and inequality conditions appealed to in checking these &#10;                             constraints apply to the value of the fields selected, so that for example &#10;                             3.0 and 3 would be conflicting keys if they were both number, but &#10;                             non-conflicting if they were both strings, or one was a string and &#10;                             one a number.&#10;                              In the test the fields have local type decimal and&#10;                             values "3.0" and "3".',
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00203m/fields00203m2.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="fields00203m2",
                version=[],
                other_attributes={}
            ),
            instance_test=[
                InstanceTest(
                    annotation=[],
                    instance_document=InstanceDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00203m/fields00203m2_n.xml",
                        other_attributes={}
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID,
                            version=[],
                            other_attributes={}
                        ),
                    ],
                    current=Current(
                        annotation=[],
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21),
                        bugzilla=None,
                        other_attributes={}
                    ),
                    prior=[],
                    name="Negative",
                    version=[],
                    other_attributes={}
                ),
            ],
            name="fields00203m2",
            version=[],
            other_attributes={}
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="values of the fields are checked for equality: &#10;decimal(3.0) compares with decimal(3.0) (valid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text='The equality and inequality conditions appealed to in checking these &#10;                             constraints apply to the value of the fields selected, so that for example &#10;                             3.0 and 3 would be conflicting keys if they were both number, but &#10;                             non-conflicting if they were both strings, or one was a string and &#10;                             one a number.&#10;                              In the test the fields have local type decimal and&#10;                             values "3.0" and "3.0".',
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00203m/fields00203m3.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="fields00203m3",
                version=[],
                other_attributes={}
            ),
            instance_test=[
                InstanceTest(
                    annotation=[],
                    instance_document=InstanceDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00203m/fields00203m3_n.xml",
                        other_attributes={}
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID,
                            version=[],
                            other_attributes={}
                        ),
                    ],
                    current=Current(
                        annotation=[],
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21),
                        bugzilla=None,
                        other_attributes={}
                    ),
                    prior=[],
                    name="Negative",
                    version=[],
                    other_attributes={}
                ),
            ],
            name="fields00203m3",
            version=[],
            other_attributes={}
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="values of the fields are checked for equality: &#10;string(3.0) compares with string(3) (valid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text='The equality and inequality conditions appealed to in checking these &#10;                             constraints apply to the value of the fields selected, so that for example &#10;                             3.0 and 3 would be conflicting keys if they were both number, but &#10;                             non-conflicting if they were both strings, or one was a string and &#10;                             one a number.&#10;                              In the test the fields have local type string and&#10;                             values "3.0" and "3".',
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00203m/fields00203m4.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="fields00203m4",
                version=[],
                other_attributes={}
            ),
            instance_test=[
                InstanceTest(
                    annotation=[],
                    instance_document=InstanceDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00203m/fields00203m4_p.xml",
                        other_attributes={}
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID,
                            version=[],
                            other_attributes={}
                        ),
                    ],
                    current=Current(
                        annotation=[],
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21),
                        bugzilla=None,
                        other_attributes={}
                    ),
                    prior=[],
                    name="Positive",
                    version=[],
                    other_attributes={}
                ),
            ],
            name="fields00203m4",
            version=[],
            other_attributes={}
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="values of the fields are checked for equality: &#10;string(3.0) compares with string(3.0) (valid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text='The equality and inequality conditions appealed to in checking these &#10;                             constraints apply to the value of the fields selected, so that for example &#10;                             3.0 and 3 would be conflicting keys if they were both number, but &#10;                             non-conflicting if they were both strings, or one was a string and &#10;                             one a number.&#10;                              In the test the fields have local type string and&#10;                             values "3.0" and "3.0".',
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00203m/fields00203m5.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="fields00203m5",
                version=[],
                other_attributes={}
            ),
            instance_test=[
                InstanceTest(
                    annotation=[],
                    instance_document=InstanceDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/fields/fields00203m/fields00203m5_n.xml",
                        other_attributes={}
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID,
                            version=[],
                            other_attributes={}
                        ),
                    ],
                    current=Current(
                        annotation=[],
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21),
                        bugzilla=None,
                        other_attributes={}
                    ),
                    prior=[],
                    name="Negative",
                    version=[],
                    other_attributes={}
                ),
            ],
            name="fields00203m5",
            version=[],
            other_attributes={}
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="In one namespace Identity-constraint definition names must be unique: &#10;the names are KEY0 and KEY1  (valid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Declare an element. Define a key identity constraint. &#10;                             Define another key identity constraint with &#10;                             another name.&#10;                             Check that the schema is valid.",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/name/name00101m/name00101m1.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="name00101m1",
                version=[],
                other_attributes={}
            ),
            instance_test=[
                InstanceTest(
                    annotation=[],
                    instance_document=InstanceDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/name/name00101m/name00101m1_p.xml",
                        other_attributes={}
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID,
                            version=[],
                            other_attributes={}
                        ),
                    ],
                    current=Current(
                        annotation=[],
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21),
                        bugzilla=None,
                        other_attributes={}
                    ),
                    prior=[],
                    name="Positive",
                    version=[],
                    other_attributes={}
                ),
            ],
            name="name00101m1",
            version=[],
            other_attributes={}
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="In one namespace Identity-constraint definition names must be unique: &#10;the names are KEY1 and KEY1  (invalid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Declare an element. Define a key identity constraint. &#10;                             Define another key identity constraint with &#10;                             the same name.&#10;                             Check that the schema is invalid.",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/name/name00101m/name00101m2.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="name00101m2",
                version=[],
                other_attributes={}
            ),
            instance_test=[],
            name="name00101m2",
            version=[],
            other_attributes={}
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="constraints have separate symbol space (valid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="With the same name declare a global element, a local element, an attribute, define a type &#10;                             and a constraint. Check that there is no name clash.",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/name/name00201m/name00201m1.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="name00201m1",
                version=[],
                other_attributes={}
            ),
            instance_test=[
                InstanceTest(
                    annotation=[],
                    instance_document=InstanceDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/name/name00201m/name00201m1_p.xml",
                        other_attributes={}
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID,
                            version=[],
                            other_attributes={}
                        ),
                    ],
                    current=Current(
                        annotation=[],
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21),
                        bugzilla=None,
                        other_attributes={}
                    ),
                    prior=[],
                    name="Positive",
                    version=[],
                    other_attributes={}
                ),
            ],
            name="name00201m1",
            version=[],
            other_attributes={}
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Identity-constraint definition identities must be unique: different namespaces  (valid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Declare an element. Define a key identity constraint and a keyref to that key inside the&#10;                             element declaration. Declare another element with the same key and keyref.&#10;                             Check that if the second element declaration is in the same namespace,&#10;                             that the schema is invalid, otherwise it is valid.",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/targetNS/targetNS00101m/targetNS00101m1.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="targetNS00101m1",
                version=[],
                other_attributes={}
            ),
            instance_test=[
                InstanceTest(
                    annotation=[],
                    instance_document=InstanceDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/targetNS/targetNS00101m/targetNS00101m1_p.xml",
                        other_attributes={}
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID,
                            version=[],
                            other_attributes={}
                        ),
                    ],
                    current=Current(
                        annotation=[],
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21),
                        bugzilla=None,
                        other_attributes={}
                    ),
                    prior=[],
                    name="Positive",
                    version=[],
                    other_attributes={}
                ),
            ],
            name="targetns00101m1",
            version=[],
            other_attributes={}
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            source=None,
                            lang=None,
                            other_attributes={},
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Identity-constraint definition identities must be unique: the same namespace  (invalid schema)",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Declare an element. Define a key identity constraint and a keyref to that key inside the&#10;                             element declaration. Declare another element with the same key and keyref.&#10;                             Check that if the second element declaration is in the same namespace,&#10;                             that the schema is invalid, otherwise it is valid.",
                                    tail=None,
                                    children=[],
                                    attributes={}
                                ),
                            ]
                        ),
                    ],
                    other_attributes={}
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    annotation=[],
                    type=TypeType.LOCATOR,
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions",
                    other_attributes={}
                ),
            ],
            schema_test=SchemaTest(
                annotation=[],
                schema_document=[
                    SchemaDocument(
                        annotation=[],
                        type=TypeType.LOCATOR,
                        href="../sunData/IdConstrDefs/targetNS/targetNS00101m/targetNS00101m2.xsd",
                        other_attributes={}
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID,
                        version=[],
                        other_attributes={}
                    ),
                ],
                current=Current(
                    annotation=[],
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21),
                    bugzilla=None,
                    other_attributes={}
                ),
                prior=[],
                name="targetNS00101m2",
                version=[],
                other_attributes={}
            ),
            instance_test=[],
            name="targetns00101m2",
            version=[],
            other_attributes={}
        ),
    ],
    contributor="SUN",
    name="IdConstrDefs",
    version=[],
    other_attributes={
        "{http://www.w3.org/2001/XMLSchema-instance}schemaLocation": "http://www.w3.org/XML/2004/xml-schema-test-suite/ AnnotatedTSSchema.xsd",
    }
)
