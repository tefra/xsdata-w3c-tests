from output.models.common.xsts_xsd.xsts import Annotation
from output.models.common.xsts_xsd.xsts import Current
from output.models.common.xsts_xsd.xsts import Documentation
from output.models.common.xsts_xsd.xsts import DocumentationReference
from output.models.common.xsts_xsd.xsts import Expected
from output.models.common.xsts_xsd.xsts import ExpectedOutcome
from output.models.common.xsts_xsd.xsts import InstanceDocument
from output.models.common.xsts_xsd.xsts import InstanceTest
from output.models.common.xsts_xsd.xsts import SchemaDocument
from output.models.common.xsts_xsd.xsts import SchemaTest
from output.models.common.xsts_xsd.xsts import Status
from output.models.common.xsts_xsd.xsts import TestGroup
from output.models.common.xsts_xsd.xsts import TestSet
from xsdata.formats.dataclass.models.generics import AnyElement
from xsdata.models.datatype import XmlDate


obj = TestSet(
    test_group=[
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="abstract type extension (valid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Abstract complex types can be used as {base type definition}s."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/abstract/abstract00101m/abstract00101m1.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="abstract00101m1"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/abstract/abstract00101m/abstract00101m1_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="Positive"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/abstract/abstract00101m/abstract00101m1_n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="Negative"
                ),
            ],
            name="abstract00101m1"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="declaration of element of abstract type (valid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Complex types for which {abstract} is true must not be used as the&#10;                              {type definition} for the *validation* of element information items."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/abstract/abstract00101m/abstract00101m2.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="abstract00101m2"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/abstract/abstract00101m/abstract00101m2_n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="Negative"
                ),
            ],
            name="abstract00101m2"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="human-targeted annotation  for complex type definition (valid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Annotations provide for human- and machine-targeted annotations of schema components."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/annotation/annotation00101m/annotation00101m1.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="annotation00101m1"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/annotation/annotation00101m/annotation00101m1_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="Positive"
                ),
            ],
            name="annotation00101m1"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="machine-targeted annotation  for complex type definition (valid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Annotations provide for human- and machine-targeted annotations of schema components."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/annotation/annotation00101m/annotation00101m2.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="annotation00101m2"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/annotation/annotation00101m/annotation00101m2_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="Positive"
                ),
            ],
            name="annotation00101m2"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="human-targeted annotation misplaced  for complex type definition (invalid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Annotations provide for human- and machine-targeted annotations of schema components."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/annotation/annotation00101m/annotation00101m3.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="annotation00101m3"
            ),
            name="annotation00101m3"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="machine-targeted annotation misplaced  for complex type definition (invalid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Annotations provide for human- and machine-targeted annotations of schema components."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/annotation/annotation00101m/annotation00101m4.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="annotation00101m4"
            ),
            name="annotation00101m4"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="type definition with any attributes (valid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="any: [attributes] can include attributes with any qualified or unqualified name."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/attrWildcard/attrWildcard00101m/attrWildcard00101m1.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="attrWildcard00101m1"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/attrWildcard/attrWildcard00101m/attrWildcard00101m1_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="Positive"
                ),
            ],
            name="attrwildcard00101m1"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="&lt;attribute&gt; [children] (valid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="The set of attribute uses corresponding to the &lt;attribute&gt; [children]."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/attributeUses/attributeUses00101m/attributeUses00101m1.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="attributeUses00101m1"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/attributeUses/attributeUses00101m/attributeUses00101m1_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="Positive"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/attributeUses/attributeUses00101m/attributeUses00101m1_n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="Negative"
                ),
            ],
            name="attributeuses00101m1"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="restriction of simple content (valid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="The type definition resolved to by the actual value of the base [attribute]."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/baseTD/baseTD00101m/baseTD00101m1.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="baseTD00101m1"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/baseTD/baseTD00101m/baseTD00101m1_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="Positive"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/baseTD/baseTD00101m/baseTD00101m1_n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="Negative"
                ),
            ],
            name="basetd00101m1"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="extention of simple content (valid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="The type definition resolved to by the actual value of the base [attribute]."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/baseTD/baseTD00101m/baseTD00101m2.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="baseTD00101m2"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/baseTD/baseTD00101m/baseTD00101m2_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="Positive"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/baseTD/baseTD00101m/baseTD00101m2_n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="Negative"
                ),
            ],
            name="basetd00101m2"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="extention of complex content (valid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="The type definition resolved to by the actual value of the base [attribute]."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/baseTD/baseTD00101m/baseTD00101m3.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="baseTD00101m3"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/baseTD/baseTD00101m/baseTD00101m3_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="Positive"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/baseTD/baseTD00101m/baseTD00101m3_n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="Negative"
                ),
            ],
            name="basetd00101m3"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="restriction of complex content (valid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="The type definition resolved to by the actual value of the base [attribute]."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/baseTD/baseTD00101m/baseTD00101m4.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="baseTD00101m4"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/baseTD/baseTD00101m/baseTD00101m4_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="Positive"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/baseTD/baseTD00101m/baseTD00101m4_n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="Negative"
                ),
            ],
            name="basetd00101m4"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="An empty content type (valid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="A {content type} with the distinguished value empty *validates* elements with&#10;                              no character or element information item [children]."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/contentType/contentType00101m/contentType00101m.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="contentType00101m"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/contentType/contentType00101m/contentType00101m1_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="contentType00101m1_p"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/contentType/contentType00101m/contentType00101m1_n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="contentType00101m1_n"
                ),
            ],
            name="contenttype00101m"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="A simple content type (valid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="A {content type} which is a Simple Type Definition (2.2.1.2) *validates*&#10;                              elements with character-only [children]."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/contentType/contentType00201m/contentType00201m.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="contentType00201m"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/contentType/contentType00201m/contentType00201m1_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="contentType00201m1_p"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/contentType/contentType00201m/contentType00201m1_n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="contentType00201m1_n"
                ),
            ],
            name="contenttype00201m"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="An element-only content type (valid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="An element-only {content type} *validates* elements with [children] that&#10;                              conform to the supplied *content model*."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/contentType/contentType00301m/contentType00301m.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="contentType00301m"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/contentType/contentType00301m/contentType00301m1_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="contentType00301m1_p"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/contentType/contentType00301m/contentType00301m1_n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="contentType00301m1_n"
                ),
            ],
            name="contenttype00301m"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="An mixed content type (valid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="A mixed {content type} *validates* elements whose element [children]&#10;                              (i.e. specifically ignoring other [children] such as character information&#10;                               items) conform to the supplied *content model*."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/contentType/contentType00401m/contentType00401m.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="contentType00401m"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/contentType/contentType00401m/contentType00401m1_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="contentType00401m1_p"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/contentType/contentType00401m/contentType00401m1_n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="contentType00401m1_n"
                ),
            ],
            name="contenttype00401m"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="items: 1.1, 1.2, 1.3, 1.4.1 (valid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Schema Component Constraint: Derivation Valid (Extension).&#10;                             The {base type definition} is a complex type definition."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/derivationMethod/derivationMethod00101m/derivationMethod00101m1.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="derivationMethod00101m1"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/derivationMethod/derivationMethod00101m/derivationMethod00101m1_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="Positive"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/derivationMethod/derivationMethod00101m/derivationMethod00101m1_n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="Negative"
                ),
            ],
            name="derivationmethod00101m1"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="items: 1.1, 1.2, 1.3, 1.4.2.1, 1.4.2.2.1 (valid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Schema Component Constraint: Derivation Valid (Extension).&#10;                             The {base type definition} is a complex type definition."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/derivationMethod/derivationMethod00101m/derivationMethod00101m2.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="derivationMethod00101m2"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/derivationMethod/derivationMethod00101m/derivationMethod00101m2_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="Positive"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/derivationMethod/derivationMethod00101m/derivationMethod00101m2_n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="Negative"
                ),
            ],
            name="derivationmethod00101m2"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="extension of the type int (valid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Schema Component Constraint: Derivation Valid (Extension).&#10;                             If the {base type definition} is a simple type definition."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/derivationMethod/derivationMethod00102m/derivationMethod00102m1.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="derivationMethod00102m1"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/derivationMethod/derivationMethod00102m/derivationMethod00102m1_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="Positive"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/derivationMethod/derivationMethod00102m/derivationMethod00102m1_n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="Negative"
                ),
            ],
            name="derivationmethod00102m1"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="extension of the type int by adding the attribute 't' of the type int (valid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Schema Component Constraint: Derivation Valid (Extension).&#10;                             If the {base type definition} is a simple type definition."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/derivationMethod/derivationMethod00102m/derivationMethod00102m2.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="derivationMethod00102m2"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/derivationMethod/derivationMethod00102m/derivationMethod00102m2_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="Positive"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/derivationMethod/derivationMethod00102m/derivationMethod00102m2_n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="Negative"
                ),
            ],
            name="derivationmethod00102m2"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="the value is extension (invalid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="The explicit values extension, and restriction prevent further derivations by&#10;                              extension and restriction respectively. If all values are specified, then &#10;                              the complex type is said to be final, because no further derivations are possible."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/final/final00101m/final00101m2.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="final00101m2"
            ),
            name="final00101m2"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="the value is restriction (valid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="The explicit values extension, and restriction prevent further derivations by&#10;                              extension and restriction respectively. If all values are specified, then &#10;                              the complex type is said to be final, because no further derivations are possible."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/final/final00101m/final00101m3.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="final00101m3"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/final/final00101m/final00101m3_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="Positive"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/final/final00101m/final00101m3_n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="Negative"
                ),
            ],
            name="final00101m3"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="the value is restriction (invalid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="The explicit values extension, and restriction prevent further derivations by&#10;                              extension and restriction respectively. If all values are specified, then &#10;                              the complex type is said to be final, because no further derivations are possible."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/final/final00101m/final00101m4.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="final00101m4"
            ),
            name="final00101m4"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="the value is #all (invalid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="The explicit values extension, and restriction prevent further derivations by&#10;                              extension and restriction respectively. If all values are specified, then &#10;                              the complex type is said to be final, because no further derivations are possible."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/final/final00101m/final00101m5.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="final00101m5"
            ),
            name="final00101m5"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="the value is #all (invalid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="The explicit values extension, and restriction prevent further derivations by&#10;                              extension and restriction respectively. If all values are specified, then &#10;                              the complex type is said to be final, because no further derivations are possible."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/final/final00101m/final00101m6.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="final00101m6"
            ),
            name="final00101m6"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Simple types are identified by their {name} and {target namespace}. (valid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Simple types are identified by their {name} and {target namespace}."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/name/name00101m/name00101m.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="name00101m"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/name/name00101m/name00101m1_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="name00101m1_p"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/name/name00101m/name00101m1_n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="name00101m1_n"
                ),
            ],
            name="name00101m"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="{prohibited substitutions} is empty (valid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="If {prohibited substitutions} is empty, then all substitutions are allowed."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/pSubstitutions/pSubstitutions00101m/pSubstitutions00101m.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="pSubstitutions00101m"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/pSubstitutions/pSubstitutions00101m/pSubstitutions00101m1_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="pSubstitutions00101m1_p"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/pSubstitutions/pSubstitutions00101m/pSubstitutions00101m1_n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="pSubstitutions00101m1_n"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/pSubstitutions/pSubstitutions00101m/pSubstitutions00101m2_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="pSubstitutions00101m2_p"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/pSubstitutions/pSubstitutions00101m/pSubstitutions00101m2_n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="pSubstitutions00101m2_n"
                ),
            ],
            name="psubstitutions00101m"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="{prohibited substitutions} is extension (valid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="{prohibited substitutions} determine whether an element declaration appearing&#10;                              in a *content model* is prevented from additionally *validating*&#10;                              element items with an xsi:type (p.2.6.1) attribute."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/pSubstitutions/pSubstitutions00102m/pSubstitutions00102m.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="pSubstitutions00102m"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/pSubstitutions/pSubstitutions00102m/pSubstitutions00102m1_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="pSubstitutions00102m1_p"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/pSubstitutions/pSubstitutions00102m/pSubstitutions00102m1_n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="pSubstitutions00102m1_n"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/pSubstitutions/pSubstitutions00102m/pSubstitutions00102m2_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="pSubstitutions00102m2_p"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/pSubstitutions/pSubstitutions00102m/pSubstitutions00102m2_n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="pSubstitutions00102m2_n"
                ),
            ],
            name="psubstitutions00102m"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="{prohibited substitutions} is restriction (valid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="{prohibited substitutions} determine whether an element declaration appearing&#10;                              in a *content model* is prevented from additionally *validating*&#10;                              element items with an xsi:type (p.2.6.1) attribute."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/pSubstitutions/pSubstitutions00103m/pSubstitutions00103m.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="pSubstitutions00103m"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/pSubstitutions/pSubstitutions00103m/pSubstitutions00103m1_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="pSubstitutions00103m1_p"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/pSubstitutions/pSubstitutions00103m/pSubstitutions00103m1_n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="pSubstitutions00103m1_n"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/pSubstitutions/pSubstitutions00103m/pSubstitutions00103m2_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="pSubstitutions00103m2_p"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/pSubstitutions/pSubstitutions00103m/pSubstitutions00103m2_n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="pSubstitutions00103m2_n"
                ),
            ],
            name="psubstitutions00103m"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="{prohibited substitutions} is #all (valid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="{prohibited substitutions} determine whether an element declaration appearing&#10;                              in a *content model* is prevented from additionally *validating*&#10;                              element items with an xsi:type (p.2.6.1) attribute."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/pSubstitutions/pSubstitutions00104m/pSubstitutions00104m.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="pSubstitutions00104m"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/pSubstitutions/pSubstitutions00104m/pSubstitutions00104m1_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="pSubstitutions00104m1_p"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/pSubstitutions/pSubstitutions00104m/pSubstitutions00104m1_n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="pSubstitutions00104m1_n"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/pSubstitutions/pSubstitutions00104m/pSubstitutions00104m2_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="pSubstitutions00104m2_p"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/pSubstitutions/pSubstitutions00104m/pSubstitutions00104m2_n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="pSubstitutions00104m2_n"
                ),
            ],
            name="psubstitutions00104m"
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Simple types are identified by their {name} and {target namespace}. (valid schema)"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Simple types are identified by their {name} and {target namespace}."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#Complex_Type_Definitions"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../sunData/CType/targetNS/targetNS00101m/targetNS00101m.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name="targetNS00101m"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/targetNS/targetNS00101m/targetNS00101m1_p.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="targetNS00101m1_p"
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../sunData/CType/targetNS/targetNS00101m/targetNS00101m1_n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name="targetNS00101m1_n"
                ),
            ],
            name="targetns00101m"
        ),
    ],
    contributor="SUN",
    name="CType",
    other_attributes={
        "{http://www.w3.org/2001/XMLSchema-instance}schemaLocation": "http://www.w3.org/XML/2004/xml-schema-test-suite/ ../common/xsts.xsd",
    }
)
