from output.models.common.xsts_xsd.xsts import Annotation
from output.models.common.xsts_xsd.xsts import Current
from output.models.common.xsts_xsd.xsts import Documentation
from output.models.common.xsts_xsd.xsts import DocumentationReference
from output.models.common.xsts_xsd.xsts import Expected
from output.models.common.xsts_xsd.xsts import ExpectedOutcome
from output.models.common.xsts_xsd.xsts import InstanceDocument
from output.models.common.xsts_xsd.xsts import InstanceTest
from output.models.common.xsts_xsd.xsts import KnownToken
from output.models.common.xsts_xsd.xsts import Prior
from output.models.common.xsts_xsd.xsts import SchemaDocument
from output.models.common.xsts_xsd.xsts import SchemaTest
from output.models.common.xsts_xsd.xsts import Status
from output.models.common.xsts_xsd.xsts import TestGroup
from output.models.common.xsts_xsd.xsts import TestSet
from xsdata.formats.dataclass.models.generics import AnyElement
from xsdata.models.datatype import XmlDate


obj = TestSet(
    test_group=[
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='complexType/@mixed must not conflict with complexContent/@mixed'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='The two attributes if both present must be the same'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-MixedInCTAndCC'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/complex001.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 8, 12)
                ),
                name='complex001.xsd'
            ),
            name='complex001',
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='complexType/@mixed must not conflict with complexContent/@mixed'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='The two attributes if both present must be the same'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-MixedInCTAndCC'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/complex002.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 8, 12)
                ),
                name='complex002.xsd'
            ),
            name='complex002',
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='xsi:type default'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Default value for xsi:type is allowed but ignored'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-XSIDefault'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-SchemaComposition-NSRefRequiresImportNotXSAndXSI'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n                    Supply default value for xsi:type that would be invalid if it were validated\n                    Note: no import of xsi namespace required, see 3.17.6.2 QName resolution (Schema Document) clause 4.2.4\n                ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/complex003.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 11, 4)
                ),
                name='complex003.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Valid instance that ignores the xsi:type\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex003.v1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex003.v1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance, satisfies the xsi:type but this should be ignored\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex003.n1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex003.n1.xml'
                ),
            ],
            name='complex003',
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='xsi:type default'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Default value for xsi:type is allowed but ignored'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-XSIDefault'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-SchemaComposition-NSRefRequiresImportNotXSAndXSI'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n                    Supply default value for xsi:type that would be invalid if it were validated\n                    Note: import of xsi namespace is permitted, see 3.17.6.2 QName resolution (Schema Document) clause 4.2.4\n                ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/complex004.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 11, 4)
                ),
                name='complex004.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Valid instance that ignores the xsi:type\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex004.v1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex004.v1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance, satisfies the xsi:type but this should be ignored\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex004.n1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex004.n1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Valid instance, the default value of xsi:type is not valid in the context where it is used\n                    (undeclared namespace prefix "xs"), but this does not matter because the default value\n                    has no effect. See bug 13457.\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex004.n2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 10, 17)
                    ),
                    prior=[
                        Prior(
                            status=Status.ACCEPTED,
                            date=XmlDate(2011, 2, 7)
                        ),
                    ],
                    name='complex004.v2.xml'
                ),
            ],
            name='complex004',
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='xsi:type fixed'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Fixed value for xsi:type is allowed but ignored,\n                except that the instance must match'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-XSIDefault'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-SchemaComposition-NSRefRequiresImportNotXSAndXSI'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n                    Supply fixed value for xsi:type \n                    Note: import of xsi namespace is permitted, see 3.17.6.2 QName resolution (Schema Document) clause 4.2.4\n                ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/complex005.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 11, 4)
                ),
                name='complex005.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Valid instance; xsi:type fixed in schema, absent in instance, has no effect \n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex005.v2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex005.v2.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance, xsi:type must conform to the fixed value if present\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex005.n1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex005.n1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance, xsi:type does conform to the fixed value but supplied value is invalid\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex005.n2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex005.n2.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance; xsi:type matches the fixed value and instance value satisfies the type, but xsi:type is not validly derived\n                    from the declared type (the declared type is complex, but the xsi:type is a simple type)\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex005.v1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 17)
                    ),
                    name='complex005.n3.xml'
                ),
            ],
            name='complex005',
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='xsi:nil default'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Default value for xsi:nil is allowed but ignored'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-XSIDefault'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-SchemaComposition-NSRefRequiresImportNotXSAndXSI'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n                    Supply default value for xsi:nil \n                    Note: import of xsi namespace is permitted, see 3.17.6.2 QName resolution (Schema Document) clause 4.2.4\n                ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/complex006.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 11, 4)
                ),
                name='complex006.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Valid instance; xsi:nil is ignored\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex006.v1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex006.v1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Valid instance; xsi:nil is ignored\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex006.v2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex006.v2.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance, xsi:nil in the instance is effective\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex006.n1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex006.n1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance, xsi:nil in the instance is effective\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex006.n2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex006.n2.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance, xsi:nil in the instance does not default to the value in the schema\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex006.n3.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex006.n3.xml'
                ),
            ],
            name='complex006',
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='xsi:nil fixed'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Fixed value for xsi:nil is allowed but ignored,\n                except if present in the instance it must match and be obeyed'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-XSIDefault'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-SchemaComposition-NSRefRequiresImportNotXSAndXSI'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n                    Supply fixed value for xsi:nil \n                    Note: import of xsi namespace is permitted, see 3.17.6.2 QName resolution (Schema Document) clause 4.2.4\n                ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/complex007.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 11, 4)
                ),
                name='complex007.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Valid instance; xsi:nil is ignored\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex006.v1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex007.v1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Valid instance; xsi:nil is ignored\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex006.v2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex007.v2.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance, xsi:nil in the instance is effective\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex006.n1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex007.n1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance, xsi:nil in the instance is effective\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex006.n2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex007.n2.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance, xsi:nil in the instance does not default to the value in the schema\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex006.n3.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex007.n3.xml'
                ),
            ],
            name='complex007',
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text="xsi:type doesn't resolve"
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='xsi:type must resolve to a known type'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-XSITypeMustResolve'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n                    Valid schema, no particular features\n                ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/complex008.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 11, 4)
                ),
                name='complex008.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance, unknown type in XSD namespace\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex008.n1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex008.n1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance, invalid QName (undeclared prefix)\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex008.n2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex008.n2.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance, xsi:type is an unknown QName\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex008.n3.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex008.n3.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance, xsi:type is not lexically a QName\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex008.n4.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex008.n4.xml'
                ),
            ],
            name='complex008',
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='xsi:type use="required'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Specifying use="required" for xsi:type is allowed and effective'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-XSIDefault'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-SchemaComposition-NSRefRequiresImportNotXSAndXSI'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n                    Make xsi:type mandatory\n                ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/complex009.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 11, 4)
                ),
                name='complex009.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Valid instance; xsi:type is present\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex009.v1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex009.v1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Valid instance; xsi:type is present\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex009.v2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex009.v2.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance, xsi:type is omitted\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex009.n1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex009.n1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "\n                    Invalid instance, xsi:type is present but instance doesn't conform to it\n                ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex009.n2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex009.n2.xml'
                ),
            ],
            name='complex009',
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='xsi:noNamespaceSchemaLocation use="required'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Specifying use="required" for xsi:noNamespaceSchemaLocation is allowed and effective'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-XSIDefault'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-SchemaComposition-NSRefRequiresImportNotXSAndXSI'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n                    Make xsi:noNamespaceSchemaLocation mandatory\n                ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/complex010.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 11, 4)
                ),
                name='complex010.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Valid instance; xsi:noNamespaceSchemaLocation is present\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex010.v1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex010.v1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance, xsi:noNamespaceSchemaLocation is omitted\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex010.n1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex010.n1.xml'
                ),
            ],
            name='complex010',
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='xsi:nil on complex type with simple content (not specific to 1.1)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='All combinations of xsi:nil with value present or absent'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n                   Specifies element as nillable\n                ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/complex011.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 11, 4)
                ),
                name='complex011.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Valid instance; not nil\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex011.v1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex011.v1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Valid instance; nil\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex011.v2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex011.v2.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance, value missing but not nil\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex011.n1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex011.n1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance,value present but nil\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex011.n2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex011.n2.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance, child present but nil\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex011.n3.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex011.n3.xml'
                ),
            ],
            name='complex011'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='xsi:nil on complex type with mixede content (not specific to 1.1)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='All combinations of xsi:nil with value present or absent'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n                   Specifies element as nillable with mixed content\n                ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/complex012.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 11, 4)
                ),
                name='complex012.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Valid instance; not nil\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex012.v1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex012.v1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Valid instance; nil\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex012.v2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex012.v2.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Valid instance; nil\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex012.v3.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex012.v3.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Valid instance; nil\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex012.v4.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex012.v4.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Valid instance; nil element can contain a comment\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex012.v5.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex012.v5.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Valid instance; nil element can contain a PI\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex012.v6.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex012.v6.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance, value missing but not nil\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex012.n1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex012.n1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance,value present but nil\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex012.n2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex012.n2.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance, child present but nil\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex012.n3.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex012.n3.xml'
                ),
            ],
            name='complex012'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='xsi:nil on complex type with element-only content (not specific to 1.1)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='All combinations of xsi:nil with value present or absent'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n                   Specifies element as nillable, element-only content, not emptiable\n                ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/complex013.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 11, 4)
                ),
                name='complex013.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Valid instance; not nil\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex013.v1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex013.v1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Valid instance; nil\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex013.v2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex013.v2.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance, value missing but not nil\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex013.n1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex013.n1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance,value present but nil\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex013.n2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex013.n2.xml'
                ),
            ],
            name='complex013'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='xsi:nil on complex type with element-only content, xs:all compositor (not specific to 1.1)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='All combinations of xsi:nil with value present or absent'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n                   Specifies element as nillable, element-only content, not emptiable\n                ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/complex014.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 11, 4)
                ),
                name='complex014.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Valid instance; not nil\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex013.v1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex014.v1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Valid instance; nil\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex013.v2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex014.v2.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance, value missing but not nil\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex013.n1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex014.n1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance,value present but nil\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex013.n2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 4)
                    ),
                    name='complex014.n2.xml'
                ),
            ],
            name='complex014'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='xsi:type on complex type must resolve'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Instance is invalid if xsi:type not present in schema'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-XSITypeMustResolve'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n                   Unremarkable schema\n                ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/complex015.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 11, 17)
                ),
                name='complex015.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "\n                    Invalid instance, xsi:type doesn't resolve\n                ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex015.n1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 17)
                    ),
                    name='complex015.n1.xml'
                ),
            ],
            name='complex015'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Redefine an attribute group'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Redefine an attribute group to make one of the attributes required'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/complex016.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2012, 4, 20)
                ),
                name='complex016.xsd'
            ),
            name='complex016'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Complex type derived by extension violating Element Declarations Consistent'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Two children with the same name but different types. Test contributed\n                by Priscilla Walmsley.'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-MixedInCTAndCC'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/complex017.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2012, 4, 20)
                ),
                name='complex017.xsd'
            ),
            name='complex017'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='See spec bug 16786 from Priscilla Walmsley'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='The XML representation summary appears to allow this but the S4S does not'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-MixedInCTAndCC'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/complex018.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2012, 4, 20)
                ),
                name='complex018.xsd'
            ),
            name='complex018'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Disallow minOccurs on child of named xs:group'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='This is disallowed by the schema for schema documents, as mentioned in a Note in 3.7.2'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/complex019.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2014, 1, 9)
                ),
                name='complex019.xsd'
            ),
            name='complex019'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Disallow maxOccurs on child of named xs:group'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='This is disallowed by the schema for schema documents, as mentioned in a Note in 3.7.2'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/complex020.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2014, 1, 9)
                ),
                name='complex020.xsd'
            ),
            name='complex020'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Element declared with an abstract type'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Instance is invalid because the type is abstract'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/complex021.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2014, 7, 3)
                ),
                name='complex021.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance, validation against an abstract type\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex021.n1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2014, 7, 3)
                    ),
                    name='complex021.n1.xml'
                ),
            ],
            name='complex021'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Empty choice should accept no instances'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='A content model defined as an empty choice should reject all instances,\n                because the instance needs to satisfy at least on branch of the choice, which is not\n                possible if there are no branches.'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/complex022.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2015, 6, 2)
                ),
                name='complex022.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance, empty content does not satisfy empty choice\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex022.n1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2015, 6, 2)
                    ),
                    name='complex022.n1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid instance, element content does not satisfy empty choice\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/complex022.n2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2015, 6, 2)
                    ),
                    name='complex022.n2.xml'
                ),
            ],
            name='complex022'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Test uniqueness constraint on a field having a complex type with simple content'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='See comment in the schema document, and bug 10236. In the XSD 1.0 spec, see clause 3\n                of "Identity Constraint Satisfied" in 3.11.4 Identity-constraint Definition Validation Rules.'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/unique001.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 8, 12)
                ),
                name='unique001.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Valid (despite the 1.0 spec): the field has a complex type with simple content.\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/unique001.v1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 8, 12)
                    ),
                    name='unique001.v1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid: two fields with the same value.\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/unique001.n1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 8, 12)
                    ),
                    name='unique001.n1.xml'
                ),
            ],
            name='unique001'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Test uniqueness constraint on a field having a complex type with mixed content'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='In both XSD 1.0 and 1.1 the schema is valid, but all instances are invalid.'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/unique002.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 8, 12)
                ),
                name='unique002.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid: the field has a complex type with mixed content.\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/unique002.n1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 8, 12)
                    ),
                    name='unique002.n1.xml'
                ),
            ],
            name='unique002'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='For the purposes of uniqueness constraints, NaN is effectively equal to NaN'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='For the purposes of uniqueness constraints, NaN is effectively equal to NaN. \n                (Uniqueness is violated if the values are "identical or equal"). See bug 9196.'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/unique003.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 6)
                ),
                name='unique003.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Value: values are distinct.\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/unique003.v1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 2, 6)
                    ),
                    name='unique003.v1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Value: values are distinct.\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/unique003.v2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 2, 6)
                    ),
                    name='unique003.v2.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid: values are duplicates.\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/unique003.n1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 2, 6)
                    ),
                    name='unique003.n1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid: values NaN and NaN are considered duplicates.\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Complex/unique003.n2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 2, 6)
                    ),
                    name='unique003.n2.xml'
                ),
            ],
            name='unique003'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Derivation by extension; locally element-only'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='If the extension is locally element-only then if one type\n                has variety=mixed, then both must have variety=mixed'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='https://stackoverflow.com/questions/78940667'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/complex023.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2024, 9, 3)
                ),
                name='complex001.xsd'
            ),
            name='complex023'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Derivation by extension; locally element-only'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='If the extension is locally element-only then if one type\n                has variety=mixed, then both must have variety=mixed'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='https://stackoverflow.com/questions/78940667'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/complex024.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2024, 9, 3)
                ),
                name='complex001.xsd'
            ),
            name='complex024'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Derivation by extension; locally empty'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='If the extension is locally empty then the {content type}\n                    of the base type is inherited, including the mixed="true" setting,\n                    even if the derived type says mixed="false".'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='https://stackoverflow.com/questions/78940667'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/complex025.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2024, 9, 3)
                ),
                name='complex001.xsd'
            ),
            name='complex025'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Derivation by extension; locally empty'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='If the extension is locally empty then the {content type}\n                    of the base type is inherited, including the mixed="true" setting,\n                    even if the derived type says mixed="false".'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='https://stackoverflow.com/questions/78940667'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Complex/complex026.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2024, 9, 3)
                ),
                name='complex001.xsd'
            ),
            name='complex026'
        ),
    ],
    contributor='Saxonica',
    name='Complex',
    other_attributes={
        '{http://www.w3.org/2001/XMLSchema-instance}schemaLocation': 'http://www.w3.org/XML/2004/xml-schema-test-suite/ ../common/xsts.xsd',
    }
)
