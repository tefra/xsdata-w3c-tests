from output.models.common.xsts_xsd.xsts import Annotation
from output.models.common.xsts_xsd.xsts import Current
from output.models.common.xsts_xsd.xsts import Documentation
from output.models.common.xsts_xsd.xsts import DocumentationReference
from output.models.common.xsts_xsd.xsts import Expected
from output.models.common.xsts_xsd.xsts import ExpectedOutcome
from output.models.common.xsts_xsd.xsts import InstanceDocument
from output.models.common.xsts_xsd.xsts import InstanceTest
from output.models.common.xsts_xsd.xsts import KnownToken
from output.models.common.xsts_xsd.xsts import SchemaDocument
from output.models.common.xsts_xsd.xsts import SchemaTest
from output.models.common.xsts_xsd.xsts import Status
from output.models.common.xsts_xsd.xsts import TestGroup
from output.models.common.xsts_xsd.xsts import TestSet
from xsdata.formats.dataclass.models.generics import AnyElement
from xsdata.models.datatype import XmlDate


obj = TestSet(
    annotation=[
        Annotation(
            appinfo_or_documentation=[
                Documentation(
                    content=[
                        AnyElement(
                            qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                            text="Tests for XSD 1.1 wildcard extensions"
                        ),
                        AnyElement(
                            qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                            text="A number of tests, both valid and invalid, demonstrating use of the new&#10;                XSD 1.1 features for wildcards, for example the notNamespace and notQName attributes."
                        ),
                    ]
                ),
            ]
        ),
    ],
    test_group=[
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Basic test of xs:anyAttribute with notNamespace attribute"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Allows any attribute except for two designated namespaces"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotNS"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild001.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 17)
                ),
                name="wild001.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, no attributes present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild001.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild001.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, permitted attributes present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild001.v2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild001.v2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, disallowed attributes present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild001.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild001.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, disallowed attributes present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild001.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild001.n2.xml"
                ),
            ],
            name="wild001",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Basic test of xs:anyAttribute with notNamespace attribute"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Allows any attribute except for two designated namespaces"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotNS"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild002.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 17)
                ),
                name="wild002.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, no children present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild002.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild002.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, permitted children present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild002.v2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild002.v2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, disallowed children present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild002.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild002.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, disallowed atchildrentributes present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild002.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild002.n2.xml"
                ),
            ],
            name="wild002",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Basic test of xs:anyAttribute with notNamespace = ##local"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Allows any attribute so long as it's in a namespace"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotNS"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild003.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 17)
                ),
                name="wild003.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, no attributes present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild003.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild003.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, permitted attributes present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild003.v2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild003.v2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, disallowed attribute present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild003.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild003.n1.xml"
                ),
            ],
            name="wild003",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Basic test of xs:any with notNamespace = ##local"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Allows any child so long as it's in a namespace"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotNS"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild004.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 17)
                ),
                name="wild004.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, no children present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild004.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild004.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, permitted child present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild004.v2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild004.v2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, disallowed child present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild004.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild004.n1.xml"
                ),
            ],
            name="wild004",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Basic test of xs:anyAttribute with notNamespace = ##targetNamespace in a no-namespace schema"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Allows any attribute so long as it's in a namespace"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotNS"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild005.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 17)
                ),
                name="wild005.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, no attributes present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild003.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild005.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, permitted attributes present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild003.v2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild005.v2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, disallowed attribute present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild003.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild005.n1.xml"
                ),
            ],
            name="wild005",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Basic test of xs:any with notNamespace = ##targetNamespace in a no-namespace schema"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Allows any child so long as it's in a namespace"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotNS"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild006.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 17)
                ),
                name="wild006.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, no children present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild004.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild006.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, permitted child present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild004.v2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild006.v2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, disallowed child present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild004.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild006.n1.xml"
                ),
            ],
            name="wild006",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Cannot mix namespace and notNamespace attributes within anyAttribute"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Invalid schema"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotNS"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild007.bad.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 17)
                ),
                name="wild007.xsd"
            ),
            name="wild007",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Cannot mix namespace and notNamespace attributes within xs:any"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Invalid schema"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotNS"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild008.bad.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 17)
                ),
                name="wild008.xsd"
            ),
            name="wild008",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Test of xs:anyAttribute with notNamespace = ##targetNamespace in a namespaced schema"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Allows any attribute so long as it's in a namespace other than target"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotNS"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild009.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 17)
                ),
                name="wild009.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, no attributes present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild009.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild009.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, permitted attributes present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild009.v2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild009.v2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, disallowed attribute present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild009.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild009.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, disallowed attribute present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild009.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild009.n2.xml"
                ),
            ],
            name="wild009",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Test of xs:any with notNamespace = ##targetNamespace in a namespaced schema"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Allows any child so long as it's in a namespace other than target"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotNS"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild010.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 17)
                ),
                name="wild010.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, no children present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild010.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild010.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, permitted children present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild010.v2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild010.v2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, disallowed children present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild010.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild010.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, disallowed children present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild010.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild010.n2.xml"
                ),
            ],
            name="wild010",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Test of xs:anyAttribute with notNamespace = ##targetNamespace in a chameleon schema"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Allows any attribute so long as it's in a namespace other than target"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotNS"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild011.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 17)
                ),
                name="wild011.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, no attributes present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild009.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild011.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, permitted attributes present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild009.v2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild011.v2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, disallowed attribute present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild009.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild011.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, disallowed attribute present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild009.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild011.n2.xml"
                ),
            ],
            name="wild011",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Test of xs:any with notNamespace = ##targetNamespace in a namespaced schema"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Allows any child so long as it's in a namespace other than target"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotNS"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild012.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 17)
                ),
                name="wild012.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, no children present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild010.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild012.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, permitted children present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild010.v2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild012.v2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, disallowed children present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild010.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild012.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, disallowed children present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild010.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild012.n2.xml"
                ),
            ],
            name="wild012",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Union of two wildcards using notNamespace"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="The union allows anything"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotNS"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild013.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 17)
                ),
                name="wild013.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, all attributes are permitted.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild013.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild013.v1.xml"
                ),
            ],
            name="wild013",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Union of two wildcards using notNamespace"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="The union allows abel but not cain"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotNS"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild014.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 17)
                ),
                name="wild014.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, abel is permitted.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild014.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild014.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, cain is banished.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild014.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild014.n1.xml"
                ),
            ],
            name="wild014",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Union of two wildcards using namespace and notNamespace respectively"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="The union allows adam, eve, and abel but not cain"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotNS"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild015.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 17)
                ),
                name="wild015.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, all three attributes permitted.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild015.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild015.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, cain is banished.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild015.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild015.n1.xml"
                ),
            ],
            name="wild015",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Union of two wildcards using namespace and notNamespace respectively"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="The union allows adam, eve, and abel but not cain.&#10;                             Inversion of wild015.xsd."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotNS"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild016.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 17)
                ),
                name="wild016.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, all three attributes permitted.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild015.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild016.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, cain is banished.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild015.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild016.n1.xml"
                ),
            ],
            name="wild016",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Valid restriction of wildcards"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Restricted type disallows more namespaces than the base type disallows"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotNS"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild017.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 17)
                ),
                name="wild017.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, attribute permitted.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild017.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild017.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute in disallowed namespace.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild017.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild017.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute in disallowed namespace.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild017.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild017.n2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute in disallowed namespace.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild017.n3.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild017.n3.xml"
                ),
            ],
            name="wild017",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Valid restriction of wildcards"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Restricted type disallows more namespaces than the base type disallows"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotNS"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild018.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 17)
                ),
                name="wild018.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, attribute permitted.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild017.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild018.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute in disallowed namespace.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild017.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild018.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute in disallowed namespace.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild017.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild018.n2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute in disallowed namespace.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild017.n3.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild018.n3.xml"
                ),
            ],
            name="wild018",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Valid restriction of wildcards"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Restricted type disallows more namespaces than the base type disallows"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotNS"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild019.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 17)
                ),
                name="wild019.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, attribute permitted.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild017.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild019.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute in disallowed namespace.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild017.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild019.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute in disallowed namespace.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild017.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild019.n2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute in disallowed namespace.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild017.n3.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild019.n3.xml"
                ),
            ],
            name="wild019",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Invalid restriction of wildcards"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Restricted type allows more namespaces than base type"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotNS"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild020.bad.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 17)
                ),
                name="wild020.xsd"
            ),
            name="wild020",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Invalid restriction of wildcards"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Restricted type allows more namespaces than base type"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotNS"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild021.bad.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 17)
                ),
                name="wild021.xsd"
            ),
            name="wild021",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Invalid restriction of wildcards"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Restricted type allows more namespaces than base type"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotNS"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild022.bad.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 17)
                ),
                name="wild022.xsd"
            ),
            name="wild022",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Wildcard intersection"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Type allows anything allowed by all the attribute wildcards"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotNS"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild023.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 17)
                ),
                name="wild023.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, attribute permitted.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild023.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild023.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute in disallowed namespace.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild023.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild023.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute in no namespace.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild023.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild023.n2.xml"
                ),
            ],
            name="wild023",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Wildcard intersection"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Type allows anything allowed by all the attribute wildcards"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotNS"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild024.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 17)
                ),
                name="wild024.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, attribute permitted.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild023.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild024.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, attribute in no namespace.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild024.v2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild024.v2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute in disallowed namespace.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild023.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild024.n1.xml"
                ),
            ],
            name="wild024",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Wildcard intersection"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Type allows anything allowed by all the attribute wildcards"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotNS"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild025.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 17)
                ),
                name="wild025.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, attribute permitted.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild025.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild025.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute in disallowed namespace.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild025.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild025.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute in disallowed namespace.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild025.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild025.n2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute in disallowed namespace.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild025.n3.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild025.n3.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute in disallowed namespace.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild025.n4.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild025.n4.xml"
                ),
            ],
            name="wild025",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Wildcard intersection"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Type allows anything allowed by all the attribute wildcards"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotNS"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild026.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 17)
                ),
                name="wild026.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, attribute permitted.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild025.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild026.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute in disallowed namespace.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild025.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild026.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute in disallowed namespace.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild025.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild026.n2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute in disallowed namespace.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild025.n3.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild026.n3.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute in disallowed namespace.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild025.n4.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 17)
                    ),
                    name="wild026.n4.xml"
                ),
            ],
            name="wild026",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Basic test of xs:anyAttribute with notQName attribute"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Allows any attribute except for xml:space or xml:id"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotQName"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild027.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild027.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, only permitted attributes present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild027.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild027.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, disallowed xml:space attribute present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild027.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild027.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, disallowed xml:id attribute present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild027.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild027.n2.xml"
                ),
            ],
            name="wild027",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Basic test of xs:any with notQName attribute"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Allows any child element except for xml:space or xml:id"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotQName"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild028.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild028.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, only permitted elements present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild028.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild028.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, disallowed xml:space element present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild028.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild028.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, disallowed xml:id element present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild028.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild028.n2.xml"
                ),
            ],
            name="wild028",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Test of xs:any with notQName attribute in an xs:sequence model group"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Allows any child element except for a"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotQName"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild029.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild029.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, only permitted elements present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild029.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild029.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, disallowed element present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild029.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild029.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, not element present to match the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild029.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild029.n2.xml"
                ),
            ],
            name="wild029",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Example from the spec: restricting away a child element that overlaps a wildcard"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="No speaker element allowed on the subtype"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotQName"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild030.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild030.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, only permitted elements present.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild030.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild030.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, valid instance of the subtype.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild030.v2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild030.v2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '&#10;&#9;&#9;                Invalid, disallowed element "speaker" is present.&#10;&#9;&#9;            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild030.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild030.n1.xml"
                ),
            ],
            name="wild030",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Name in notQName is a name that would not be allowed anyway"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Violates rule 4 of 3.10.6.1 Wildcard Properties Correct"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotQName"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild031.bad.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild031.xsd"
            ),
            name="wild031",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Name in notQName is a name that would not be allowed anyway"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Violates rule 4 of 3.10.6.1 Wildcard Properties Correct"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotQName"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild032.bad.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild032.xsd"
            ),
            name="wild032",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Name in notQName is a name that would not be allowed anyway"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Violates rule 4 of 3.10.6.1 Wildcard Properties Correct"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotQName"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild033.bad.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild033.xsd"
            ),
            name="wild033",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Name in notQName is a name that would not be allowed anyway"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Violates rule 4 of 3.10.6.1 Wildcard Properties Correct"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotQName"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild034.bad.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild034.xsd"
            ),
            name="wild034",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Name in notQName is a name that would not be allowed anyway"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Violates rule 4 of 3.10.6.1 Wildcard Properties Correct"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotQName"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild035.bad.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild035.xsd"
            ),
            name="wild035",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Undeclared prefix in QName"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="invalid QName in notQName attribute"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotQName"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild036.bad.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild036.xsd"
            ),
            name="wild036",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Invalid QName in notQName"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="invalid QName in notQName attribute"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotQName"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild037.bad.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild037.xsd"
            ),
            name="wild037",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Invalid QName in notQName"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="invalid QName in notQName attribute"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotQName"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild038.bad.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild038.xsd"
            ),
            name="wild038",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Invalid QName in notQName"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="invalid QName in notQName attribute"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotQName"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild039.bad.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild039.xsd"
            ),
            name="wild039",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Banning xsi attributes has no effect"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="xsi:type is validated without reference to attribute uses or wildcards"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotQName"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild040.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild040.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, xsi:type is permitted despite the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild040.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild040.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, xsi:type has to conform to the standard rules regardless of processContents=skip.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild040.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild040.n1.xml"
                ),
            ],
            name="wild040",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Explicit attribute in xsi namespace is not allowed"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Error: see 3.2.6.4 xsi: not allowed"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotQName"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild041.bad.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild041.xsd"
            ),
            name="wild041",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="xsi attribute wildcards are allowed"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="There's no rule to stop non-standard attributes in the xsi namespace being&#10;                introduced by wildcard"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild042.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild042.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, xsi:banana is permitted by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild042.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild042.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, xsi:nil is governed by the built-in type definition, not the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild042.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild042.n1.xml"
                ),
            ],
            name="wild042",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Wildcard intersection with notQName"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="disallows the union of the disallowed QNames"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotQName"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild043.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild043.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, attribute f is permitted by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild043.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild043.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute is excluded by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild043.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild043.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute is excluded by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild043.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild043.n2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute is excluded by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild043.n3.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild043.n3.xml"
                ),
            ],
            name="wild043",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Wildcard intersection with notQName"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="disallows the union of the disallowed QNames"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotQName"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild044.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild044.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, attribute f is permitted by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild044.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild044.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute is excluded by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild044.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild044.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute is excluded by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild044.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild044.n2.xml"
                ),
            ],
            name="wild044",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Wildcard union with notQName"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="disallows the intersection of the disallowed QNames"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotQName"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild045.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild045.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, attribute a is permitted by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild045.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild045.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, attribute d is permitted by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild045.v2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild045.v2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute c is excluded by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild045.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild045.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute xml:space is excluded by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild045.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild045.n2.xml"
                ),
            ],
            name="wild045",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Wildcard union with notQName and notNamespace"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="disallows the intersection of the disallowed QNames"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotQName"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild046.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild046.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, attribute a is permitted by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild045.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild046.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, attribute d is permitted by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild045.v2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild046.v2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute c is excluded by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild045.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild046.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute xml:lang is excluded by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild045.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild046.n2.xml"
                ),
            ],
            name="wild046",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Element Wildcard union with notQName and notNamespace"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="disallows the intersection of the disallowed QNames"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotQName"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild047.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild047.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, child is permitted by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild047.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild047.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, child element is excluded by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild047.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild047.n1.xml"
                ),
            ],
            name="wild047",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Complex type restriction using wildcard particles"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Base type disallows QNames that the restricted type does not disallow"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotQName"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild048.bad.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild048.xsd"
            ),
            name="wild048",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Complex type restriction using wildcard particles"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Restricted type disallows all QNames that the base type disallows"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotQName"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild049.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild049.xsd"
            ),
            name="wild049",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Complex type restriction using wildcard particles"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Restricted type disallows all QNames that the base type disallows"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotQName"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild050.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild050.xsd"
            ),
            name="wild050",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Complex type restriction using wildcard particles"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Restricted type does not disallow all QNames that the base type disallows"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotQName"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild051.bad.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild051.xsd"
            ),
            name="wild051",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Element Wildcard with notQName=##defined"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Basic test of ##defined"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotXDefined"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild052.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild052.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, child is permitted by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild052.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild052.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, child is permitted by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild052.v2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild052.v2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, child element is excluded by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild052.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild052.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, child element is excluded by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild052.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild052.n2.xml"
                ),
            ],
            name="wild052",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Element Wildcard with notQName=##defined"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Basic test of ##defined with multiple namespaces"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotXDefined"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild053.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild053.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, child is permitted by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild053.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild053.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, child is permitted by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild053.v2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild053.v2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, child element is excluded by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild053.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild053.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, child element is excluded by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild053.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild053.n2.xml"
                ),
            ],
            name="wild053",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Attribute Wildcard with notQName=##defined"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Basic test of ##defined"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotXDefined"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild054.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild054.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, attribute is permitted by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild054.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild054.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, attribute is permitted by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild054.v2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild054.v2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute is excluded by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild054.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild054.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute is excluded by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild054.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild054.n2.xml"
                ),
            ],
            name="wild054",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Attribute Wildcard with notQName=##defined"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Valid restriction of wildcard"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotXDefined"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild055.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild055.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, attributes are permitted by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild055.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild055.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute is excluded by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild055.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild055.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute is excluded by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild055.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild055.n2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute is excluded by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild055.n3.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild055.n3.xml"
                ),
            ],
            name="wild055",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Attribute Wildcard with notQName=##defined"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Valid restriction of wildcard"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotXDefined"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild056.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild056.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, attributes are permitted by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild055.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild056.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute is excluded by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild055.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild056.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute is excluded by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild055.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild056.n2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute is excluded by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild055.n3.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild056.n3.xml"
                ),
            ],
            name="wild056",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Attribute Wildcard with notQName=##defined"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Invalid restriction of wildcard"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotXDefined"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild057.bad.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild057.xsd"
            ),
            name="wild057",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Attribute Wildcard intersection with notQName=##defined"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text='Both wildcards specify notQName="##defined"'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotXDefined"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild058.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild058.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, attributes are permitted by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild058.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild058.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute is specifically excluded by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild058.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild058.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute is excluded by the wildcard, it's a global attribute declaration.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild058.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild058.n2.xml"
                ),
            ],
            name="wild058",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Attribute Wildcard intersection with notQName=##defined"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text='One wildcard specifies notQName="##defined"'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotXDefined"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild059.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild059.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Valid, attributes are permitted by the wildcard.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild058.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild059.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Invalid, attribute is specifically excluded by the wildcard.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild058.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild059.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Invalid, zong attribute is not present in the intersection of the attribute groups.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild058.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild059.n2.xml"
                ),
            ],
            name="wild059",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Attribute Wildcard union with notQName=##defined"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text='Both wildcards specify notQName="##defined" so union is expressible'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotXDefined"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild060.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 10, 20)
                ),
                name="wild060.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Valid, attributes are permitted by the wildcard.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild058.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild060.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Valid, attribute is allowed in the union wildcard.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild058.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild060.v2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Invalid, attribute is excluded by the wildcard, it's a global attribute declaration.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild058.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 10, 20)
                    ),
                    name="wild060.n2.xml"
                ),
            ],
            name="wild060",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text='Element fails "dynamic EDC" test - governing type not substitutable for context-determined type'
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Schema is valid, instance is not"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-TighterMatchingRuleForEDC"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild061.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 11, 4)
                ),
                name="wild061.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Invalid in 1.1, second e element fails dynamic EDC test.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild061.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 11, 4)
                    ),
                    name="wild061.n1.xml"
                ),
            ],
            name="wild061",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text='Element fails "dynamic EDC" test - lax wildcard'
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Schema is valid, instance is not"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-TighterMatchingRuleForEDC"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild062.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 11, 4)
                ),
                name="wild062.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Valid, g element is skipped.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild062.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 11, 4)
                    ),
                    name="wild062.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Invalid in 1.1, second e element fails dynamic EDC test.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild062.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 11, 4)
                    ),
                    name="wild062.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Invalid in 1.1, second e element fails dynamic EDC test because of xsi:type&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild062.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 11, 4)
                    ),
                    name="wild062.n2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Invalid in 1.1, second f element fails dynamic EDC test because of xsi:type&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild062.n3.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 11, 4)
                    ),
                    name="wild062.n3.xml"
                ),
            ],
            name="wild062",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text='Element fails "dynamic EDC" test - lax wildcard'
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Schema is valid, instance is not"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-TighterMatchingRuleForEDC"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild063.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 11, 4)
                ),
                name="wild063.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Valid, second e element is OK.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild063.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 11, 4)
                    ),
                    name="wild063.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Valid, second f element is OK.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild063.v2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 11, 4)
                    ),
                    name="wild063.v2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Invalid in 1.1, second e element fails dynamic EDC test.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild063.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 11, 4)
                    ),
                    name="wild063.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Invalid in 1.1, second e element fails dynamic EDC test because of xsi:type&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild063.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 11, 4)
                    ),
                    name="wild063.n2.xml"
                ),
            ],
            name="wild063",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text='Element fails "dynamic EDC" test - lax wildcard'
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Schema is valid, instance is not"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-TighterMatchingRuleForEDC"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild064.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 11, 4)
                ),
                name="wild064.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Valid, g element is OK.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild064.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 11, 4)
                    ),
                    name="wild064.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Valid, second e element is OK because of xsi:type&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild064.v2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 11, 4)
                    ),
                    name="wild064.v2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Invalid in 1.1, second e element fails dynamic EDC test.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild064.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 11, 4)
                    ),
                    name="wild064.n1.xml"
                ),
            ],
            name="wild064",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text='Element fails "dynamic EDC" test - lax wildcard'
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Schema is valid, instance is not"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-TighterMatchingRuleForEDC"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild065.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 11, 4)
                ),
                name="wild065.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Valid, g element is OK because of xsi:type.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild065.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 11, 4)
                    ),
                    name="wild065.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Invalid in 1.1, g element fails dynamic EDC test.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild065.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 11, 4)
                    ),
                    name="wild065.n1.xml"
                ),
            ],
            name="wild065",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text='Element fails "dynamic EDC" test - lax wildcard'
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Substitutability involving a union"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-TighterMatchingRuleForEDC"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild066.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 11, 4)
                ),
                name="wild066.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Valid, e element is OK, belongs to a member of the union.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild066.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 11, 4)
                    ),
                    name="wild066.v1.xml"
                ),
            ],
            name="wild066",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text='Element fails "dynamic EDC" test - lax wildcard'
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Substitutability involving a union"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-TighterMatchingRuleForEDC"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild067.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 11, 4)
                ),
                name="wild067.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Valid, e element is not OK, belongs not to a member of the union.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild067.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 11, 4)
                    ),
                    name="wild067.n1.xml"
                ),
            ],
            name="wild067",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text='Element fails "dynamic EDC" test - lax wildcard'
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Context determined type comes from base type of restriction"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-TighterMatchingRuleForEDC"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild068.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2008, 11, 4)
                ),
                name="wild068.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Valid, e element is not OK, clashes with element particle e defined in base type.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild068.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2008, 11, 4)
                    ),
                    name="wild068.n1.xml"
                ),
            ],
            name="wild068",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text='Element fails "dynamic EDC" test - lax wildcard - xs:all content model'
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Context determined type comes from base type of restriction"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-TighterMatchingRuleForEDC"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild069.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 11, 17)
                ),
                name="wild069.xsd"
            ),
            name="wild069",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Basic test of notQName=##definedSibling"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="notQName=##definedSibling in a sequence content model"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotXDefineSibling"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild070.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 5, 12)
                ),
                name="wild070.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Valid.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild070.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 5, 12)
                    ),
                    name="wild070.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Invalid, a element is not OK, clashes with a defined sibling.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild070.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 5, 12)
                    ),
                    name="wild070.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Invalid, a element is not OK, clashes with a defined sibling.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild070.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 5, 12)
                    ),
                    name="wild070.n2.xml"
                ),
            ],
            name="wild070",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Basic test of notQName=##definedSibling with substitution groups"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="notQName=##definedSibling in a sequence content model"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotXDefineSibling"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild071.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 5, 12)
                ),
                name="wild071.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Valid.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild071.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 5, 12)
                    ),
                    name="wild071.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Invalid, a element is not OK, clashes with a defined sibling.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild071.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 5, 12)
                    ),
                    name="wild071.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Invalid, a element is not OK, clashes with a defined sibling.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild071.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 5, 12)
                    ),
                    name="wild071.n2.xml"
                ),
            ],
            name="wild071",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Test of notQName=##definedSibling with substitution groups in xs:all content model"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="notQName=##definedSibling in an xs:all content model"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotXDefineSibling"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild072.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 5, 12)
                ),
                name="wild072.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Valid.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild072.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 5, 12)
                    ),
                    name="wild072.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Invalid, a element is not OK, clashes with a defined sibling.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild072.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 5, 12)
                    ),
                    name="wild072.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Invalid, a element is not OK, clashes with a defined sibling.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild072.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 5, 12)
                    ),
                    name="wild072.n2.xml"
                ),
            ],
            name="wild072",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Test of wildcards and substitution groups in xs:all content model"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Variant of wild072 without the ##definedSibling, for comparison"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotXDefineSibling"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild073.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 5, 12)
                ),
                name="wild073.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Valid.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild072.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 5, 12)
                    ),
                    name="wild073.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Invalid, a element is not OK, clashes with a defined sibling.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild072.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 5, 12)
                    ),
                    name="wild073.v2.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Invalid, a element is not OK, clashes with a defined sibling.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild072.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 5, 12)
                    ),
                    name="wild073.v3.xml"
                ),
            ],
            name="wild073",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Test of openContent wildcards and substitution groups in xs:sequence content model"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Open Content with ##definedSibling"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotXDefineSibling"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild074.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 5, 12)
                ),
                name="wild074.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Valid.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild074.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 5, 12)
                    ),
                    name="wild074.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Invalid, a element is not OK, clashes with a defined sibling.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild074.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 5, 12)
                    ),
                    name="wild074.n1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Invalid, a element is not OK, clashes with a defined sibling.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild074.n2.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 5, 12)
                    ),
                    name="wild074.n2.xml"
                ),
            ],
            name="wild074",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Consistency of governing type declarations between locally-declared elements and wildcards in a content model"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Violation of Element Locally Valid (Complex Type) Rule 5"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-TighterMatchingRuleForEDC"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild075.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 16)
                ),
                name="wild075.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Valid.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild075.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 16)
                    ),
                    name="wild075.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Invalid, a element is not OK, clashes with type of a sibling.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild075.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 5, 12)
                    ),
                    name="wild075.n1.xml"
                ),
            ],
            name="wild075",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Consistency of governing type declarations between locally-declared elements and wildcards in a content model"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Violation of Element Locally Valid (Complex Type) Rule 5"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-TighterMatchingRuleForEDC"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild076.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 16)
                ),
                name="wild076.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Valid.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild075.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 16)
                    ),
                    name="wild076.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Invalid, a element is not OK, clashes with type of a sibling.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild075.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 5, 12)
                    ),
                    name="wild076.n1.xml"
                ),
            ],
            name="wild076",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Consistency of governing type declarations between locally-declared elements and wildcards in a content model"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Violation of Element Locally Valid (Complex Type) Rule 5, not a problem with a skip wildcard"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-TighterMatchingRuleForEDC"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild077.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 16)
                ),
                name="wild077.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Valid.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild075.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 16)
                    ),
                    name="wild077.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Valid, element is OK because it's a skip wildcard.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild075.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 5, 12)
                    ),
                    name="wild077.n1.xml"
                ),
            ],
            name="wild077",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Consistency of governing type declarations between locally-declared elements and strict wildcards in a content model"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Violation of Element Declarations Consistent (type tables differ)"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-TighterMatchingRuleForEDC"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild078.bad.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 16)
                ),
                name="wild078.bad.xsd"
            ),
            name="wild078",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Consistency of governing type declarations between locally-declared elements and lax wildcards in a content model"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Violation of Element Declarations Consistent"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-TighterMatchingRuleForEDC"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild079.bad.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 16)
                ),
                name="wild079.bad.xsd"
            ),
            name="wild079",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Consistency of governing type declarations between locally-declared elements and lax  wildcards in a content model"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="No violation of Element Declarations Consistent with a skip wildcard"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-TighterMatchingRuleForEDC"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild080.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 16)
                ),
                name="wild080.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Valid, element is OK because it's a skip wildcard.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild080.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 16)
                    ),
                    name="wild080.v1.xml"
                ),
            ],
            name="wild080",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Consistency of governing type declarations between locally-declared elements and strict wildcards in a content model"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Violation of Element Declarations Consistent (type tables differ)"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-TighterMatchingRuleForEDC"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild081.bad.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 16)
                ),
                name="wild081.bad.xsd"
            ),
            name="wild081",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text="Consistency of governing type declarations between locally-declared elements in a content model"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text='No violation of Element Declarations Consistent because the type tables are "the same"'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#Wildcards"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-TighterMatchingRuleForEDC"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild082.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 16)
                ),
                name="wild082.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;                Valid, element is OK.&#10;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild082.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 16)
                    ),
                    name="wild082.v1.xml"
                ),
            ],
            name="wild082",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text='Element Wildcard union with notQName="##defined"'
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text="Tests the spec note:&#10;                Note: When one of the wildcards has defined in {disallowed names} and the other does not, &#10;                then defined is not included in the union. This may allow QNames that are not allowed by &#10;                either wildcard. This is to ensure that all unions are expressible. If defined is intended &#10;                to be included, then it is necessary to have it in both wildcards."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#cos-aw-union"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotQName"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild083.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 10, 24)
                ),
                name="wild083.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Valid, attribute is permitted by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild083.v1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 10, 24)
                    ),
                    name="wild083.v1.xml"
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute is excluded by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild083.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 10, 24)
                    ),
                    name="wild047.n1.xml"
                ),
            ],
            name="wild083",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title",
                                    text='Element Wildcard union with notQName="##defined"'
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description",
                                    text=""
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="http://www.w3.org/TR/2009/WD-xmlschema11-1-20091203/structures.html#cos-aw-union"
                ),
                DocumentationReference(
                    href="../common/XSD1_1TestCategories.xml#xsd1_1-Wildcards-NotQName"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../saxonData/Wild/wild084.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2012, 6, 29)
                ),
                name="wild083.xsd"
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        "&#10;&#9;&#9;                Invalid, attribute is excluded by the wildcard.&#10;&#9;&#9;            ",
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href="../saxonData/Wild/wild084.n1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2012, 6, 29)
                    ),
                    name="wild084.n1.xml"
                ),
            ],
            name="wild084",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
    ],
    contributor="Saxonica",
    name="Wild",
    version=[
        KnownToken.VALUE_1_1,
    ],
    other_attributes={
        "{http://www.w3.org/2001/XMLSchema-instance}schemaLocation": "http://www.w3.org/XML/2004/xml-schema-test-suite/ AnnotatedTSSchema.xsd",
    }
)
