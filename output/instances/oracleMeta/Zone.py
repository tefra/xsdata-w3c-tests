from output.models.common.xsts_xsd.xsts import Annotation
from output.models.common.xsts_xsd.xsts import Current
from output.models.common.xsts_xsd.xsts import Documentation
from output.models.common.xsts_xsd.xsts import DocumentationReference
from output.models.common.xsts_xsd.xsts import Expected
from output.models.common.xsts_xsd.xsts import ExpectedOutcome
from output.models.common.xsts_xsd.xsts import InstanceDocument
from output.models.common.xsts_xsd.xsts import InstanceTest
from output.models.common.xsts_xsd.xsts import KnownToken
from output.models.common.xsts_xsd.xsts import Prior
from output.models.common.xsts_xsd.xsts import SchemaDocument
from output.models.common.xsts_xsd.xsts import SchemaTest
from output.models.common.xsts_xsd.xsts import Status
from output.models.common.xsts_xsd.xsts import TestGroup
from output.models.common.xsts_xsd.xsts import TestSet
from xsdata.formats.dataclass.models.generics import AnyElement
from xsdata.models.datatype import XmlDate


obj = TestSet(
    test_group=[
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Equality testing (enumeration) for dateTime values, use YEAR as ZERO'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Use Year as Zero '
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2009/WD-xmlschema11-2-20091203/datatypes.html#rf-explicitTimezone'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-DateTimeTypes-ExplicitTZFacet'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../oracleData/Zone/zone401.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 24)
                ),
                name='zone401.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Valid date per enumeration\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../oracleData/Zone/zone401.v1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 2, 24)
                    ),
                    name='zone401.v1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Valid date per enumeration\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../oracleData/Zone/zone401.v2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 2, 24)
                    ),
                    name='zone401.v2.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Valid date per enumeration\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../oracleData/Zone/zone401.v3.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 2, 24)
                    ),
                    name='zone401.v3.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid date per enumeration\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../oracleData/Zone/zone401.n1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 2, 24)
                    ),
                    name='zone401.n1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid date per enumeration\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../oracleData/Zone/zone401.n2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 2, 24)
                    ),
                    name='zone401.n2.xml'
                ),
            ],
            name='zone401',
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text=' Test year zero allowed for facet maxInclusive for datatype xs:dateTime '
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text=' Test year zero allowed for facet maxInclusive for datatype xs:dateTime'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2009/WD-xmlschema11-2-20091203/datatypes.html#rf-explicitTimezone'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-DateTimeTypes-ExplicitTZFacet'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../oracleData/Zone/zone402.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 24)
                ),
                name='zone402.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid date per maxInclusive facet\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../oracleData/Zone/zone402.n1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 2, 24)
                    ),
                    name='zone402.n1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid date per maxInclusive facet\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../oracleData/Zone/zone402.n2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 2, 24)
                    ),
                    name='zone402.n2.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Valid date per maxInclusive facet\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../oracleData/Zone/zone402.v1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 2, 24)
                    ),
                    name='zone402.v1.xml'
                ),
            ],
            name='zone402',
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Test new timezone facet explicitTimezone, value="required" for datatype xs:dateTime'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Test new timezone facet explicitTimezone, value="required" for datatype xs:dateTime'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2009/WD-xmlschema11-2-20091203/datatypes.html#rf-explicitTimezone'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-DateTimeTypes-ExplicitTZFacet'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../oracleData/Zone/zone403.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 24)
                ),
                name='zone403.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                valid, timezone present.\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../oracleData/Zone/zone403.v1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 2, 24)
                    ),
                    name='zone403.v1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                valid, timezone present.\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../oracleData/Zone/zone403.v2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 2, 24)
                    ),
                    name='zone403.v2.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid, timezone not present.\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../oracleData/Zone/zone403.n1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 2, 24)
                    ),
                    name='zone403.n1.xml'
                ),
            ],
            name='zone403',
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Test new timezone facet explicitTimezone, value="prohibited" for datatype xs:dateTime'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Test new timezone facet explicitTimezone, value="prohibited" for datatype xs:dateTime'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2009/WD-xmlschema11-2-20091203/datatypes.html#rf-explicitTimezone'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-DateTimeTypes-ExplicitTZFacet'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../oracleData/Zone/zone404.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 24)
                ),
                name='zone404.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                valid, timezone not present as expected\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../oracleData/Zone/zone404.v1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 2, 24)
                    ),
                    name='zone404.v1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid, timezone present.\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../oracleData/Zone/zone404.n1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 2, 24)
                    ),
                    name='zone404.n1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid, timezone present.\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../oracleData/Zone/zone404.n2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 2, 24)
                    ),
                    name='zone404.n2.xml'
                ),
            ],
            name='zone404',
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Test new timezone facet explicitTimezone, value="optional" for datatype xs:dateTime'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Test new timezone facet explicitTimezone, value="optional" for datatype xs:dateTime'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2009/WD-xmlschema11-2-20091203/datatypes.html#rf-explicitTimezone'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-DateTimeTypes-ExplicitTZFacet'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../oracleData/Zone/zone405.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Typo corrected - see bug #12189\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 7, 29)
                ),
                prior=[
                    Prior(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 2, 24)
                    ),
                ],
                name='zone405.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                valid date\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../oracleData/Zone/zone405.v1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 2, 24)
                    ),
                    name='zone405.v1.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                valid date\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../oracleData/Zone/zone405.v2.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 2, 24)
                    ),
                    name='zone405.v2.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                valid date\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../oracleData/Zone/zone405.v3.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 2, 24)
                    ),
                    name='zone405.v3.xml'
                ),
            ],
            name='zone405',
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Test day value must be no more than 30 if month is one of 4, 6, 9, or 11 for xs:dateTime'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Test day value must be no more than 30 if month is one of 4, 6, 9, or 11 for xs:dateTime'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2009/WD-xmlschema11-2-20091203/datatypes.html#rf-explicitTimezone'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-DateTimeTypes-ExplicitTZFacet'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../oracleData/Zone/zone406.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 24)
                ),
                name='zone406.xsd'
            ),
            name='zone406',
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Test day value must be no more than 28 if month is 2 and Year is not divisible 4 in xs:dateTime'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Test day value must be no more than 28 if month is 2 and Year is not divisible 4 in xs:dateTime'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2009/WD-xmlschema11-2-20091203/datatypes.html#rf-explicitTimezone'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-DateTimeTypes-ExplicitTZFacet'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../oracleData/Zone/zone407.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 24)
                ),
                name='zone407.xsd'
            ),
            name='zone407',
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text=' Test explicitTimezone facet: cannot derive "required" from "prohibited"'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text=' Test explicitTimezone facet: cannot derive "required" from "prohibited"'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2009/WD-xmlschema11-2-20091203/datatypes.html#rf-explicitTimezone'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-DateTimeTypes-ExplicitTZFacet'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../oracleData/Zone/zone408.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 24)
                ),
                name='zone408.xsd'
            ),
            name='zone408',
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text=' Test explicitTimezone facet: cannot derive "prohibited" from "required"'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text=' Test explicitTimezone facet: cannot derive "prohibited" from "required"'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2009/WD-xmlschema11-2-20091203/datatypes.html#rf-explicitTimezone'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-DateTimeTypes-ExplicitTZFacet'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../oracleData/Zone/zone409.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 24)
                ),
                name='zone409.xsd'
            ),
            name='zone409',
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
    ],
    contributor='Oracle Corporation',
    name='Zone',
    version=[
        KnownToken.VALUE_1_1,
    ]
)
