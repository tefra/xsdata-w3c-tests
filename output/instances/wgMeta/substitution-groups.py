from output.models.common.xsts_xsd.xsts import Annotation
from output.models.common.xsts_xsd.xsts import Documentation
from output.models.common.xsts_xsd.xsts import DocumentationReference
from output.models.common.xsts_xsd.xsts import Expected
from output.models.common.xsts_xsd.xsts import ExpectedOutcome
from output.models.common.xsts_xsd.xsts import InstanceDocument
from output.models.common.xsts_xsd.xsts import InstanceTest
from output.models.common.xsts_xsd.xsts import KnownToken
from output.models.common.xsts_xsd.xsts import SchemaDocument
from output.models.common.xsts_xsd.xsts import SchemaTest
from output.models.common.xsts_xsd.xsts import TestGroup
from output.models.common.xsts_xsd.xsts import TestSet
from xsdata.formats.dataclass.models.generics import AnyElement


obj = TestSet(
    annotation=[
        Annotation(
            appinfo_or_documentation=[
                Documentation(
                    content=[
                        AnyElement(
                            qname='{http://www.w3.org/1999/xhtml}div',
                            text='',
                            children=[
                                AnyElement(
                                    qname='{http://www.w3.org/1999/xhtml}p',
                                    text='A set of tests on changes to substition-group behavior,\n     constructed by hand, as a contribution to the XML Schema 1.1\n     test suite.\n    '
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/1999/xhtml}p',
                                    text='Revisions:'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/1999/xhtml}ul',
                                    text='',
                                    children=[
                                        AnyElement(
                                            qname='{http://www.w3.org/1999/xhtml}li',
                                            text='2010-06-17 : CMSMcQ : add test groups \n      ',
                                            children=[
                                                AnyElement(
                                                    qname='{http://www.w3.org/1999/xhtml}a',
                                                    text='sg-abstract-upa',
                                                    tail=' etc. for\n      checking the changes defining abstract elements as members\n      of substitution groups.\n     ',
                                                    attributes={
                                                        'href': '#sg-abstract-upa',
                                                    }
                                                ),
                                            ]
                                        ),
                                        AnyElement(
                                            qname='{http://www.w3.org/1999/xhtml}li',
                                            text='2010-06-16 : CMSMcQ : correct error in test of content \n      model competition:  the negative wildcard does compete\n      with n, but the element wins (UPA has been weakened in 1.1).\n     '
                                        ),
                                        AnyElement(
                                            qname='{http://www.w3.org/1999/xhtml}li',
                                            text='2010-06-16 : CMSMcQ : move this catalog into \n      the dev.w3.org directory structure in directory wgMeta.  Change\n      locations of DTD, stylesheet, etc. accordingly.\n     '
                                        ),
                                        AnyElement(
                                            qname='{http://www.w3.org/1999/xhtml}li',
                                            text='2010-06-10 : CMSMcQ : create this test catalog,\n                               using XHTML modularization driver.\n     '
                                        ),
                                    ]
                                ),
                            ]
                        ),
                    ]
                ),
            ]
        ),
    ],
    test_group=[
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/1999/xhtml}div',
                                    text='',
                                    children=[
                                        AnyElement(
                                            qname='{http://www.w3.org/1999/xhtml}p',
                                            text='\n      In section ',
                                            children=[
                                                AnyElement(
                                                    qname='{http://www.w3.org/1999/xhtml}a',
                                                    text='G.1.3 Changes to content models',
                                                    tail=', XSD 1.1 says\n      (in list item 3):\n     ',
                                                    attributes={
                                                        'href': 'http://www.w3.org/TR/xmlschema11-1/#ch_models',
                                                    }
                                                ),
                                            ]
                                        ),
                                        AnyElement(
                                            qname='{http://www.w3.org/1999/xhtml}blockquote',
                                            text='',
                                            children=[
                                                AnyElement(
                                                    qname='{http://www.w3.org/1999/xhtml}p',
                                                    text='Finally, the keyword ##definedSibling can be used to exclude\n       all elements explicitly mentioned in a content model (and all\n       elements substitutable for those elements).'
                                                ),
                                            ]
                                        ),
                                        AnyElement(
                                            qname='{http://www.w3.org/1999/xhtml}p',
                                            text="   \n      So we test the following interactions of definedSibling\n      and substitution groups, in schemas with some subset of\n      elements e, s, n, s1, n1, s2, n2, with s1 substitutable \n      ('s') for s, and s2 for s1, but n1 and n2 ",
                                            children=[
                                                AnyElement(
                                                    qname='{http://www.w3.org/1999/xhtml}em',
                                                    text='not',
                                                    tail='\n      substitutable for n (or anything else).  Elements n and s are\n      siblings, together with a negative wildcard (no positive \n      wildcard is possible) which has the keyword #definedSibling.\n     '
                                                ),
                                            ]
                                        ),
                                        AnyElement(
                                            qname='{http://www.w3.org/1999/xhtml}ol',
                                            text='',
                                            children=[
                                                AnyElement(
                                                    qname='{http://www.w3.org/1999/xhtml}li',
                                                    text='A negative wildcard excludes s1 but not n1.'
                                                ),
                                                AnyElement(
                                                    qname='{http://www.w3.org/1999/xhtml}li',
                                                    text='A negative wildcard competes with n but not s,\n       but the result is the same in either case, since\n       when elements and wildcards compete, the element\n       wins.'
                                                ),
                                            ]
                                        ),
                                    ]
                                ),
                            ]
                        ),
                    ]
                ),
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/1999/xhtml}div',
                                    text='',
                                    children=[
                                        AnyElement(
                                            qname='{http://www.w3.org/1999/xhtml}p',
                                            text='\n      In this test set, we exercise the fact that a\n      negative wildcard excludes s1 but not n1.\n     '
                                        ),
                                    ]
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='../XSD1_1TestCategories.xhtml#xsd1_1-SubstitutionGroups'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../wgData/sg/snneg.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                    Expected(
                        validity=ExpectedOutcome.INVALID,
                        version=[
                            KnownToken.VALUE_1_0,
                        ]
                    ),
                ],
                name='snneg'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/sn.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name='sn',
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/s1n.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name='s1n',
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/sn1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='sn1',
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/sne.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name='sne',
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/snn.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='snn',
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/sns.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='sns',
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/snn1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name='snn1',
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/sns1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='sns1',
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
            ],
            name='sg-and-defined-Sibling-1',
            version=[
                KnownToken.VALUE_1_0,
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/1999/xhtml}div',
                                    text='',
                                    children=[
                                        AnyElement(
                                            qname='{http://www.w3.org/1999/xhtml}p',
                                            text='\n      Negative wildcard excludes s1 but not n1.\n      (Second time around).\n     '
                                        ),
                                    ]
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='../XSD1_1TestCategories.xhtml#xsd1_1-SubstitutionGroups'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../wgData/sg/negsn.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[
                            KnownToken.VALUE_1_1,
                        ]
                    ),
                    Expected(
                        validity=ExpectedOutcome.INVALID,
                        version=[
                            KnownToken.VALUE_1_0,
                        ]
                    ),
                ],
                name='negsn'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/esn.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name='esn',
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/nsn.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='nsn',
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/ssn.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='ssn',
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/n1sn.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name='n1sn',
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/s1sn.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='s1sn',
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
            ],
            name='sg-and-defined-Sibling-2',
            version=[
                KnownToken.VALUE_1_0,
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/1999/xhtml}div',
                                    text='',
                                    children=[
                                        AnyElement(
                                            qname='{http://www.w3.org/1999/xhtml}p',
                                            text='A negative wildcard competes with n, but not s.'
                                        ),
                                        AnyElement(
                                            qname='{http://www.w3.org/1999/xhtml}p',
                                            text="But elements outrank wildcards, so there's no conflict \n      in either case."
                                        ),
                                        AnyElement(
                                            qname='{http://www.w3.org/1999/xhtml}p',
                                            text="This test defines a content model beginning with s, n\n      and continuing with any of (negative-wildcard, a),\n      (s, b), or (n, c).  \n      The instance tests have element sequences beginning\n      with s and n, continuing with one of s1, n1, e,\n      and ending with one of a, b, c.  \n      The sequences with s1 test the processor's handling\n      of the competition between s1 and the negative wildcard.\n      The other tests are present primarily for symmetry.\n     "
                                        ),
                                    ]
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='../XSD1_1TestCategories.xhtml#xsd1_1-SubstitutionGroups'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../wgData/sg/snbranch.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[
                            KnownToken.VALUE_1_1,
                        ]
                    ),
                    Expected(
                        validity=ExpectedOutcome.INVALID,
                        version=[
                            KnownToken.VALUE_1_0,
                        ]
                    ),
                ],
                name='snbranch'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/sns1a.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='sns1a',
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/sns1b.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name='sns1b',
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/sns1c.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='sns1c',
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/snn1a.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='snn1a',
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/snn1b.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='snn1b',
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/snn1c.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name='snn1c',
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/snea.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name='snea',
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/sneb.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='sneb',
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/snec.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='snec',
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
            ],
            name='sg-and-defined-Sibling-3',
            version=[
                KnownToken.VALUE_1_0,
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/1999/xhtml}div',
                                    text='',
                                    children=[
                                        AnyElement(
                                            qname='{http://www.w3.org/1999/xhtml}p',
                                            text='\n      In section ',
                                            children=[
                                                AnyElement(
                                                    qname='{http://www.w3.org/1999/xhtml}a',
                                                    text='G.1.9 Element declarations',
                                                    tail=', XSD 1.1 says\n      (in list item 3):\n     ',
                                                    attributes={
                                                        'href': 'http://www.w3.org/TR/xmlschema11-1/#ch_elemdecl',
                                                    }
                                                ),
                                            ]
                                        ),
                                        AnyElement(
                                            qname='{http://www.w3.org/1999/xhtml}blockquote',
                                            text='',
                                            children=[
                                                AnyElement(
                                                    qname='{http://www.w3.org/1999/xhtml}p',
                                                    text='Abstract elements may now appear in substitution groups.'
                                                ),
                                            ]
                                        ),
                                        AnyElement(
                                            qname='{http://www.w3.org/1999/xhtml}p',
                                            text='This change was adopted to resolve bug \n      ',
                                            children=[
                                                AnyElement(
                                                    qname='{http://www.w3.org/1999/xhtml}a',
                                                    text='4337 \n       Substitution group and abstract',
                                                    tail=', which pointed out some\n      uncertainty about whether particular content models did or did\n      not violate the UPA and EDC constraints.',
                                                    attributes={
                                                        'href': 'http://www.w3.org/Bugs/Public/show_bug.cgi?id=4337',
                                                    }
                                                ),
                                            ]
                                        ),
                                        AnyElement(
                                            qname='{http://www.w3.org/1999/xhtml}p',
                                            text="Because no element in a document instance is locally valid\n      against an abstract element declaration, this change does not\n      mean that abstract elements can now be instantiated in a valid\n      instance document.  Instead, the effect is to make clear that\n      abstract element declarations are considered when deciding\n      whether a content model violates constraints defined in terms of\n      elements' substitution groups.\n     "
                                        ),
                                        AnyElement(
                                            qname='{http://www.w3.org/1999/xhtml}p',
                                            text='This test group illustrates the violation of the Unique\n      Particle Attribution constraint by a competition between a\n      local element declaration and an abstract global element\n      declaration which is substitutable for another.\n     '
                                        ),
                                    ]
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='../XSD1_1TestCategories.xhtml#xsd1_1-SubstitutionGroups-AbstrElemAllowed'
                ),
                DocumentationReference(
                    href='http://www.w3.org/Bugs/Public/show_bug.cgi?id=4337'
                ),
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#sec-cos-nonambig'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../wgData/sg/upa.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[
                            KnownToken.VALUE_1_0,
                        ]
                    ),
                    Expected(
                        validity=ExpectedOutcome.INVALID,
                        version=[
                            KnownToken.VALUE_1_1,
                        ]
                    ),
                ],
                name='schemaTest'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/e1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name='e1.xml',
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/e1token.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name='e1token.xml',
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/e1short.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='e1short.xml',
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
            ],
            name='sg-abstract-upa',
            version=[
                KnownToken.VALUE_1_0,
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/1999/xhtml}div',
                                    text='',
                                    children=[
                                        AnyElement(
                                            qname='{http://www.w3.org/1999/xhtml}p',
                                            text='For context see test group\n      ',
                                            children=[
                                                AnyElement(
                                                    qname='{http://www.w3.org/1999/xhtml}a',
                                                    text='sg-abstract-upa',
                                                    tail=' above.\n     ',
                                                    attributes={
                                                        'href': '#sg-abstact-upa',
                                                    }
                                                ),
                                            ]
                                        ),
                                        AnyElement(
                                            qname='{http://www.w3.org/1999/xhtml}p',
                                            text='Like ',
                                            children=[
                                                AnyElement(
                                                    qname='{http://www.w3.org/1999/xhtml}a',
                                                    text='sg-abstract-upa',
                                                    tail=',\n      this test group illustrates the violation of the Unique\n      Particle Attribution constraint by a competition between a\n      local element declaration and an abstract global element\n      declaration which is substitutable for another.\n     ',
                                                    attributes={
                                                        'href': '#sg-abstact-upa',
                                                    }
                                                ),
                                            ]
                                        ),
                                        AnyElement(
                                            qname='{http://www.w3.org/1999/xhtml}p',
                                            text='In this case, however, the top-level ',
                                            children=[
                                                AnyElement(
                                                    qname='{http://www.w3.org/1999/xhtml}tt',
                                                    text='e1',
                                                    tail='\n      and the local '
                                                ),
                                                AnyElement(
                                                    qname='{http://www.w3.org/1999/xhtml}tt',
                                                    text='e1',
                                                    tail=' have different types.\n      If a 1.0 processor ignores the global '
                                                ),
                                                AnyElement(
                                                    qname='{http://www.w3.org/1999/xhtml}tt',
                                                    text='e1',
                                                    tail=" on\n      the grounds that it's not a member of the actual\n      substitution group of "
                                                ),
                                                AnyElement(
                                                    qname='{http://www.w3.org/1999/xhtml}tt',
                                                    text='e',
                                                    tail=', then it will accept\n      this schema, and validate the instances as shown.\n      A 1.1 processor must reject the schema; it violates\n      both UPA and EDC.\n     '
                                                ),
                                            ]
                                        ),
                                    ]
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='../XSD1_1TestCategories.xhtml#xsd1_1-SubstitutionGroups-AbstrElemAllowed'
                ),
                DocumentationReference(
                    href='http://www.w3.org/Bugs/Public/show_bug.cgi?id=4337'
                ),
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#sec-cos-nonambig'
                ),
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#cos-element-consistent'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../wgData/sg/upa2.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[
                            KnownToken.VALUE_1_0,
                        ]
                    ),
                    Expected(
                        validity=ExpectedOutcome.INVALID,
                        version=[
                            KnownToken.VALUE_1_1,
                        ]
                    ),
                ],
                name='schemaTest'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/e1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='e1.xml',
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/e1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name='e1bis.xml',
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/e1token.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='e1token.xml',
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/e1short.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name='e1short.xml',
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
            ],
            name='sg-abstract-upa2',
            version=[
                KnownToken.VALUE_1_0,
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/1999/xhtml}div',
                                    text='',
                                    children=[
                                        AnyElement(
                                            qname='{http://www.w3.org/1999/xhtml}p',
                                            text='For context see test group\n      ',
                                            children=[
                                                AnyElement(
                                                    qname='{http://www.w3.org/1999/xhtml}a',
                                                    text='sg-abstract-upa',
                                                    tail=' above.\n     ',
                                                    attributes={
                                                        'href': '#sg-abstact-upa',
                                                    }
                                                ),
                                            ]
                                        ),
                                        AnyElement(
                                            qname='{http://www.w3.org/1999/xhtml}p',
                                            text='The schema in this test group illustrates the violation of\n      the Element Declarations Consistent constraint by an abstract\n      top-level element.  XSD 1.0 processors which treat abstract\n      elements as not part of any actual substitution group will\n      accept the schema and validate the instances accordingly.\n     '
                                        ),
                                        AnyElement(
                                            qname='{http://www.w3.org/1999/xhtml}p',
                                            text='XSD 1.1 processors must reject the schema.'
                                        ),
                                    ]
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='../XSD1_1TestCategories.xhtml#xsd1_1-SubstitutionGroups-AbstrElemAllowed'
                ),
                DocumentationReference(
                    href='http://www.w3.org/Bugs/Public/show_bug.cgi?id=4337'
                ),
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#cos-element-consistent'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../wgData/sg/edc.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[
                            KnownToken.VALUE_1_0,
                        ]
                    ),
                    Expected(
                        validity=ExpectedOutcome.INVALID,
                        version=[
                            KnownToken.VALUE_1_1,
                        ]
                    ),
                ],
                name='schemaTest'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/ee1s.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='ee1s.xml',
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/ee1t.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='ee1t.xml',
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/ee1i.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name='ee1i.xml',
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/e1se1s.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='e1se1s.xml',
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/e1se1t.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='e1se1t.xml',
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/e1se1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='e1se1i.xml',
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/e1ite1s.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='e1ite1s.xml',
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/e1ite1t.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='e1ite1t.xml',
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/e1ite1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='e1ite1i.xml',
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/e1ie1s.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='e1ie1s.xml',
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/e1ie1t.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='e1ie1t.xml',
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../wgData/sg/e1ie1.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name='e1ie1i.xml',
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
            ],
            name='sg-abstract-edc',
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
    ],
    contributor='C. M. Sperberg-McQueen',
    name='substitution-groups',
    version=[
        KnownToken.VALUE_1_1,
    ]
)
