from output.models.common.xsts_xsd.xsts import Annotation
from output.models.common.xsts_xsd.xsts import Documentation
from output.models.common.xsts_xsd.xsts import DocumentationReference
from output.models.common.xsts_xsd.xsts import Expected
from output.models.common.xsts_xsd.xsts import ExpectedOutcome
from output.models.common.xsts_xsd.xsts import InstanceDocument
from output.models.common.xsts_xsd.xsts import InstanceTest
from output.models.common.xsts_xsd.xsts import KnownToken
from output.models.common.xsts_xsd.xsts import SchemaDocument
from output.models.common.xsts_xsd.xsts import SchemaTest
from output.models.common.xsts_xsd.xsts import TestGroup
from output.models.common.xsts_xsd.xsts import TestSet
from xsdata.formats.dataclass.models.generics import AnyElement


obj = TestSet(
    annotation=[
        Annotation(
            appinfo_or_documentation=[
                Documentation(
                    content=[
                        AnyElement(
                            qname="{http://www.w3.org/1999/xhtml}div",
                            text="",
                            children=[
                                AnyElement(
                                    qname="{http://www.w3.org/1999/xhtml}p",
                                    text="A set of tests on changes to substition-group behavior,&#10;     constructed by hand, as a contribution to the XML Schema 1.1&#10;     test suite.&#10;    "
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/1999/xhtml}p",
                                    text="Revisions:"
                                ),
                                AnyElement(
                                    qname="{http://www.w3.org/1999/xhtml}ul",
                                    text="",
                                    children=[
                                        AnyElement(
                                            qname="{http://www.w3.org/1999/xhtml}li",
                                            text="2010-06-17 : CMSMcQ : add test groups &#10;      ",
                                            children=[
                                                AnyElement(
                                                    qname="{http://www.w3.org/1999/xhtml}a",
                                                    text="sg-abstract-upa",
                                                    tail=" etc. for&#10;      checking the changes defining abstract elements as members&#10;      of substitution groups.&#10;     ",
                                                    attributes={
                                                        "href": "#sg-abstract-upa",
                                                    }
                                                ),
                                            ]
                                        ),
                                        AnyElement(
                                            qname="{http://www.w3.org/1999/xhtml}li",
                                            text="2010-06-16 : CMSMcQ : correct error in test of content &#10;      model competition:  the negative wildcard does compete&#10;      with n, but the element wins (UPA has been weakened in 1.1).&#10;     "
                                        ),
                                        AnyElement(
                                            qname="{http://www.w3.org/1999/xhtml}li",
                                            text="2010-06-16 : CMSMcQ : move this catalog into &#10;      the dev.w3.org directory structure in directory wgMeta.  Change&#10;      locations of DTD, stylesheet, etc. accordingly.&#10;     "
                                        ),
                                        AnyElement(
                                            qname="{http://www.w3.org/1999/xhtml}li",
                                            text="2010-06-10 : CMSMcQ : create this test catalog,&#10;                               using XHTML modularization driver.&#10;     "
                                        ),
                                    ]
                                ),
                            ]
                        ),
                    ]
                ),
            ]
        ),
    ],
    test_group=[
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/1999/xhtml}div",
                                    text="",
                                    children=[
                                        AnyElement(
                                            qname="{http://www.w3.org/1999/xhtml}p",
                                            text="&#10;      In section ",
                                            children=[
                                                AnyElement(
                                                    qname="{http://www.w3.org/1999/xhtml}a",
                                                    text="G.1.3 Changes to content models",
                                                    tail=", XSD 1.1 says&#10;      (in list item 3):&#10;     ",
                                                    attributes={
                                                        "href": "http://www.w3.org/TR/xmlschema11-1/#ch_models",
                                                    }
                                                ),
                                            ]
                                        ),
                                        AnyElement(
                                            qname="{http://www.w3.org/1999/xhtml}blockquote",
                                            text="",
                                            children=[
                                                AnyElement(
                                                    qname="{http://www.w3.org/1999/xhtml}p",
                                                    text="Finally, the keyword ##definedSibling can be used to exclude&#10;       all elements explicitly mentioned in a content model (and all&#10;       elements substitutable for those elements)."
                                                ),
                                            ]
                                        ),
                                        AnyElement(
                                            qname="{http://www.w3.org/1999/xhtml}p",
                                            text="   &#10;      So we test the following interactions of definedSibling&#10;      and substitution groups, in schemas with some subset of&#10;      elements e, s, n, s1, n1, s2, n2, with s1 substitutable &#10;      ('s') for s, and s2 for s1, but n1 and n2 ",
                                            children=[
                                                AnyElement(
                                                    qname="{http://www.w3.org/1999/xhtml}em",
                                                    text="not",
                                                    tail="&#10;      substitutable for n (or anything else).  Elements n and s are&#10;      siblings, together with a negative wildcard (no positive &#10;      wildcard is possible) which has the keyword #definedSibling.&#10;     "
                                                ),
                                            ]
                                        ),
                                        AnyElement(
                                            qname="{http://www.w3.org/1999/xhtml}ol",
                                            text="",
                                            children=[
                                                AnyElement(
                                                    qname="{http://www.w3.org/1999/xhtml}li",
                                                    text="A negative wildcard excludes s1 but not n1."
                                                ),
                                                AnyElement(
                                                    qname="{http://www.w3.org/1999/xhtml}li",
                                                    text="A negative wildcard competes with n but not s,&#10;       but the result is the same in either case, since&#10;       when elements and wildcards compete, the element&#10;       wins."
                                                ),
                                            ]
                                        ),
                                    ]
                                ),
                            ]
                        ),
                    ]
                ),
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/1999/xhtml}div",
                                    text="",
                                    children=[
                                        AnyElement(
                                            qname="{http://www.w3.org/1999/xhtml}p",
                                            text="&#10;      In this test set, we exercise the fact that a&#10;      negative wildcard excludes s1 but not n1.&#10;     "
                                        ),
                                    ]
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="../XSD1_1TestCategories.xhtml#xsd1_1-SubstitutionGroups"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../wgData/sg/snneg.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                    Expected(
                        validity=ExpectedOutcome.INVALID,
                        version=[
                            KnownToken.VALUE_1_0,
                        ]
                    ),
                ],
                name="snneg"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/sn.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name="sn",
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/s1n.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name="s1n",
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/sn1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="sn1",
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/sne.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name="sne",
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/snn.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="snn",
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/sns.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="sns",
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/snn1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name="snn1",
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/sns1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="sns1",
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
            ],
            name="sg-and-defined-Sibling-1",
            version=[
                KnownToken.VALUE_1_0,
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/1999/xhtml}div",
                                    text="",
                                    children=[
                                        AnyElement(
                                            qname="{http://www.w3.org/1999/xhtml}p",
                                            text="&#10;      Negative wildcard excludes s1 but not n1.&#10;      (Second time around).&#10;     "
                                        ),
                                    ]
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="../XSD1_1TestCategories.xhtml#xsd1_1-SubstitutionGroups"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../wgData/sg/negsn.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[
                            KnownToken.VALUE_1_1,
                        ]
                    ),
                    Expected(
                        validity=ExpectedOutcome.INVALID,
                        version=[
                            KnownToken.VALUE_1_0,
                        ]
                    ),
                ],
                name="negsn"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/esn.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name="esn",
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/nsn.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="nsn",
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/ssn.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="ssn",
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/n1sn.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name="n1sn",
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/s1sn.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="s1sn",
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
            ],
            name="sg-and-defined-Sibling-2",
            version=[
                KnownToken.VALUE_1_0,
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/1999/xhtml}div",
                                    text="",
                                    children=[
                                        AnyElement(
                                            qname="{http://www.w3.org/1999/xhtml}p",
                                            text="A negative wildcard competes with n, but not s."
                                        ),
                                        AnyElement(
                                            qname="{http://www.w3.org/1999/xhtml}p",
                                            text="But elements outrank wildcards, so there's no conflict &#10;      in either case."
                                        ),
                                        AnyElement(
                                            qname="{http://www.w3.org/1999/xhtml}p",
                                            text="This test defines a content model beginning with s, n&#10;      and continuing with any of (negative-wildcard, a),&#10;      (s, b), or (n, c).  &#10;      The instance tests have element sequences beginning&#10;      with s and n, continuing with one of s1, n1, e,&#10;      and ending with one of a, b, c.  &#10;      The sequences with s1 test the processor's handling&#10;      of the competition between s1 and the negative wildcard.&#10;      The other tests are present primarily for symmetry.&#10;     "
                                        ),
                                    ]
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="../XSD1_1TestCategories.xhtml#xsd1_1-SubstitutionGroups"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../wgData/sg/snbranch.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[
                            KnownToken.VALUE_1_1,
                        ]
                    ),
                    Expected(
                        validity=ExpectedOutcome.INVALID,
                        version=[
                            KnownToken.VALUE_1_0,
                        ]
                    ),
                ],
                name="snbranch"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/sns1a.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="sns1a",
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/sns1b.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name="sns1b",
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/sns1c.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="sns1c",
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/snn1a.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="snn1a",
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/snn1b.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="snn1b",
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/snn1c.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name="snn1c",
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/snea.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name="snea",
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/sneb.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="sneb",
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/snec.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="snec",
                    version=[
                        KnownToken.VALUE_1_1,
                    ]
                ),
            ],
            name="sg-and-defined-Sibling-3",
            version=[
                KnownToken.VALUE_1_0,
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/1999/xhtml}div",
                                    text="",
                                    children=[
                                        AnyElement(
                                            qname="{http://www.w3.org/1999/xhtml}p",
                                            text="&#10;      In section ",
                                            children=[
                                                AnyElement(
                                                    qname="{http://www.w3.org/1999/xhtml}a",
                                                    text="G.1.9 Element declarations",
                                                    tail=", XSD 1.1 says&#10;      (in list item 3):&#10;     ",
                                                    attributes={
                                                        "href": "http://www.w3.org/TR/xmlschema11-1/#ch_elemdecl",
                                                    }
                                                ),
                                            ]
                                        ),
                                        AnyElement(
                                            qname="{http://www.w3.org/1999/xhtml}blockquote",
                                            text="",
                                            children=[
                                                AnyElement(
                                                    qname="{http://www.w3.org/1999/xhtml}p",
                                                    text="Abstract elements may now appear in substitution groups."
                                                ),
                                            ]
                                        ),
                                        AnyElement(
                                            qname="{http://www.w3.org/1999/xhtml}p",
                                            text="This change was adopted to resolve bug &#10;      ",
                                            children=[
                                                AnyElement(
                                                    qname="{http://www.w3.org/1999/xhtml}a",
                                                    text="4337 &#10;       Substitution group and abstract",
                                                    tail=", which pointed out some&#10;      uncertainty about whether particular content models did or did&#10;      not violate the UPA and EDC constraints.",
                                                    attributes={
                                                        "href": "http://www.w3.org/Bugs/Public/show_bug.cgi?id=4337",
                                                    }
                                                ),
                                            ]
                                        ),
                                        AnyElement(
                                            qname="{http://www.w3.org/1999/xhtml}p",
                                            text="Because no element in a document instance is locally valid&#10;      against an abstract element declaration, this change does not&#10;      mean that abstract elements can now be instantiated in a valid&#10;      instance document.  Instead, the effect is to make clear that&#10;      abstract element declarations are considered when deciding&#10;      whether a content model violates constraints defined in terms of&#10;      elements' substitution groups.&#10;     "
                                        ),
                                        AnyElement(
                                            qname="{http://www.w3.org/1999/xhtml}p",
                                            text="This test group illustrates the violation of the Unique&#10;      Particle Attribution constraint by a competition between a&#10;      local element declaration and an abstract global element&#10;      declaration which is substitutable for another.&#10;     "
                                        ),
                                    ]
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="../XSD1_1TestCategories.xhtml#xsd1_1-SubstitutionGroups-AbstrElemAllowed"
                ),
                DocumentationReference(
                    href="http://www.w3.org/Bugs/Public/show_bug.cgi?id=4337"
                ),
                DocumentationReference(
                    href="http://www.w3.org/TR/xmlschema11-1/#sec-cos-nonambig"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../wgData/sg/upa.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[
                            KnownToken.VALUE_1_0,
                        ]
                    ),
                    Expected(
                        validity=ExpectedOutcome.INVALID,
                        version=[
                            KnownToken.VALUE_1_1,
                        ]
                    ),
                ],
                name="schemaTest"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/e1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name="e1.xml",
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/e1token.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name="e1token.xml",
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/e1short.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="e1short.xml",
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
            ],
            name="sg-abstract-upa",
            version=[
                KnownToken.VALUE_1_0,
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/1999/xhtml}div",
                                    text="",
                                    children=[
                                        AnyElement(
                                            qname="{http://www.w3.org/1999/xhtml}p",
                                            text="For context see test group&#10;      ",
                                            children=[
                                                AnyElement(
                                                    qname="{http://www.w3.org/1999/xhtml}a",
                                                    text="sg-abstract-upa",
                                                    tail=" above.&#10;     ",
                                                    attributes={
                                                        "href": "#sg-abstact-upa",
                                                    }
                                                ),
                                            ]
                                        ),
                                        AnyElement(
                                            qname="{http://www.w3.org/1999/xhtml}p",
                                            text="Like ",
                                            children=[
                                                AnyElement(
                                                    qname="{http://www.w3.org/1999/xhtml}a",
                                                    text="sg-abstract-upa",
                                                    tail=",&#10;      this test group illustrates the violation of the Unique&#10;      Particle Attribution constraint by a competition between a&#10;      local element declaration and an abstract global element&#10;      declaration which is substitutable for another.&#10;     ",
                                                    attributes={
                                                        "href": "#sg-abstact-upa",
                                                    }
                                                ),
                                            ]
                                        ),
                                        AnyElement(
                                            qname="{http://www.w3.org/1999/xhtml}p",
                                            text="In this case, however, the top-level ",
                                            children=[
                                                AnyElement(
                                                    qname="{http://www.w3.org/1999/xhtml}tt",
                                                    text="e1",
                                                    tail="&#10;      and the local "
                                                ),
                                                AnyElement(
                                                    qname="{http://www.w3.org/1999/xhtml}tt",
                                                    text="e1",
                                                    tail=" have different types.&#10;      If a 1.0 processor ignores the global "
                                                ),
                                                AnyElement(
                                                    qname="{http://www.w3.org/1999/xhtml}tt",
                                                    text="e1",
                                                    tail=" on&#10;      the grounds that it's not a member of the actual&#10;      substitution group of "
                                                ),
                                                AnyElement(
                                                    qname="{http://www.w3.org/1999/xhtml}tt",
                                                    text="e",
                                                    tail=", then it will accept&#10;      this schema, and validate the instances as shown.&#10;      A 1.1 processor must reject the schema; it violates&#10;      both UPA and EDC.&#10;     "
                                                ),
                                            ]
                                        ),
                                    ]
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="../XSD1_1TestCategories.xhtml#xsd1_1-SubstitutionGroups-AbstrElemAllowed"
                ),
                DocumentationReference(
                    href="http://www.w3.org/Bugs/Public/show_bug.cgi?id=4337"
                ),
                DocumentationReference(
                    href="http://www.w3.org/TR/xmlschema11-1/#sec-cos-nonambig"
                ),
                DocumentationReference(
                    href="http://www.w3.org/TR/xmlschema11-1/#cos-element-consistent"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../wgData/sg/upa2.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[
                            KnownToken.VALUE_1_0,
                        ]
                    ),
                    Expected(
                        validity=ExpectedOutcome.INVALID,
                        version=[
                            KnownToken.VALUE_1_1,
                        ]
                    ),
                ],
                name="schemaTest"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/e1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="e1.xml",
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/e1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name="e1bis.xml",
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/e1token.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="e1token.xml",
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/e1short.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name="e1short.xml",
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
            ],
            name="sg-abstract-upa2",
            version=[
                KnownToken.VALUE_1_0,
                KnownToken.VALUE_1_1,
            ]
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname="{http://www.w3.org/1999/xhtml}div",
                                    text="",
                                    children=[
                                        AnyElement(
                                            qname="{http://www.w3.org/1999/xhtml}p",
                                            text="For context see test group&#10;      ",
                                            children=[
                                                AnyElement(
                                                    qname="{http://www.w3.org/1999/xhtml}a",
                                                    text="sg-abstract-upa",
                                                    tail=" above.&#10;     ",
                                                    attributes={
                                                        "href": "#sg-abstact-upa",
                                                    }
                                                ),
                                            ]
                                        ),
                                        AnyElement(
                                            qname="{http://www.w3.org/1999/xhtml}p",
                                            text="The schema in this test group illustrates the violation of&#10;      the Element Declarations Consistent constraint by an abstract&#10;      top-level element.  XSD 1.0 processors which treat abstract&#10;      elements as not part of any actual substitution group will&#10;      accept the schema and validate the instances accordingly.&#10;     "
                                        ),
                                        AnyElement(
                                            qname="{http://www.w3.org/1999/xhtml}p",
                                            text="XSD 1.1 processors must reject the schema."
                                        ),
                                    ]
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href="../XSD1_1TestCategories.xhtml#xsd1_1-SubstitutionGroups-AbstrElemAllowed"
                ),
                DocumentationReference(
                    href="http://www.w3.org/Bugs/Public/show_bug.cgi?id=4337"
                ),
                DocumentationReference(
                    href="http://www.w3.org/TR/xmlschema11-1/#cos-element-consistent"
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href="../wgData/sg/edc.xsd"
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID,
                        version=[
                            KnownToken.VALUE_1_0,
                        ]
                    ),
                    Expected(
                        validity=ExpectedOutcome.INVALID,
                        version=[
                            KnownToken.VALUE_1_1,
                        ]
                    ),
                ],
                name="schemaTest"
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/ee1s.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="ee1s.xml",
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/ee1t.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="ee1t.xml",
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/ee1i.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    name="ee1i.xml",
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/e1se1s.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="e1se1s.xml",
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/e1se1t.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="e1se1t.xml",
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/e1se1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="e1se1i.xml",
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/e1ite1s.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="e1ite1s.xml",
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/e1ite1t.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="e1ite1t.xml",
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/e1ite1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="e1ite1i.xml",
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/e1ie1s.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="e1ie1s.xml",
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/e1ie1t.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="e1ie1t.xml",
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
                InstanceTest(
                    instance_document=InstanceDocument(
                        href="../wgData/sg/e1ie1.xml"
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    name="e1ie1i.xml",
                    version=[
                        KnownToken.VALUE_1_0,
                    ]
                ),
            ],
            name="sg-abstract-edc",
            version=[
                KnownToken.VALUE_1_1,
            ]
        ),
    ],
    contributor="C. M. Sperberg-McQueen",
    name="substitution-groups",
    version=[
        KnownToken.VALUE_1_1,
    ]
)
