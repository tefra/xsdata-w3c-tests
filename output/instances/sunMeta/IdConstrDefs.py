from output.models.common.xsts_xsd.xsts import Annotation
from output.models.common.xsts_xsd.xsts import Current
from output.models.common.xsts_xsd.xsts import Documentation
from output.models.common.xsts_xsd.xsts import DocumentationReference
from output.models.common.xsts_xsd.xsts import Expected
from output.models.common.xsts_xsd.xsts import ExpectedOutcome
from output.models.common.xsts_xsd.xsts import InstanceDocument
from output.models.common.xsts_xsd.xsts import InstanceTest
from output.models.common.xsts_xsd.xsts import SchemaDocument
from output.models.common.xsts_xsd.xsts import SchemaTest
from output.models.common.xsts_xsd.xsts import Status
from output.models.common.xsts_xsd.xsts import TestGroup
from output.models.common.xsts_xsd.xsts import TestSet
from xsdata.formats.dataclass.models.generics import AnyElement
from xsdata.models.datatype import XmlDate


obj = TestSet(
    test_group=[
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='human-targeted  annotation for an Identity-constraint Definition (valid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Annotations provide for human- and machine-targeted \n                             annotations of schema components.\n                              In the test the human-targeted annotation \n                             is provided for an Identity-constraint Definition.'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/annotation/annotation00101m/annotation00101m1.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='annotation00101m1'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../sunData/IdConstrDefs/annotation/annotation00101m/annotation00101m1_p.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name='Positive'
                ),
            ],
            name='annotation00101m1'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='human-targeted misplaced annotation for an Identity-constraint Definition (invalid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Annotations provide for human- and machine-targeted \n                             annotations of schema components.\n                              In the test the human-targeted annotation \n                             is provided for an Identity-constraint Definition.\n                             The annotation is misplaced.'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/annotation/annotation00101m/annotation00101m2.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='annotation00101m2'
            ),
            name='annotation00101m2'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='human-targeted double annotation for an Identity-constraint Definition (invalid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Annotations provide for human- and machine-targeted \n                             annotations of schema components.\n                              In the test the human-targeted annotation \n                             is provided for an Identity-constraint Definition.\n                             The annotation is specified twice.'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/annotation/annotation00101m/annotation00101m3.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='annotation00101m3'
            ),
            name='annotation00101m3'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='machine-targeted  annotation for an Identity-constraint Definition (valid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Annotations provide for human- and machine-targeted \n                             annotations of schema components.\n                              In the test the machine-targeted annotation \n                             is provided for an Identity-constraint Definition.'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/annotation/annotation00101m/annotation00101m4.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='annotation00101m4'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../sunData/IdConstrDefs/annotation/annotation00101m/annotation00101m4_p.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name='Positive'
                ),
            ],
            name='annotation00101m4'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='machine-targeted misplaced annotation for an Identity-constraint Definition (invalid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Annotations provide for human- and machine-targeted \n                             annotations of schema components.\n                              In the test the machine-targeted annotation \n                             is provided for an Identity-constraint Definition.\n                             The annotation is misplaced.'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/annotation/annotation00101m/annotation00101m5.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='annotation00101m5'
            ),
            name='annotation00101m5'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='machine-targeted double annotation for an Identity-constraint Definition (invalid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Annotations provide for human- and machine-targeted \n                             annotations of schema components.\n                              In the test the machine-targeted annotation \n                             is provided for an Identity-constraint Definition.\n                             The annotation is specified twice.'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/annotation/annotation00101m/annotation00101m6.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='annotation00101m6'
            ),
            name='annotation00101m6'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='fields may have different types (valid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Define a uniqueness constraint with fields of different types.'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/fields/fields00101m/fields00101m1.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='fields00101m1'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../sunData/IdConstrDefs/fields/fields00101m/fields00101m1_p.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name='Positive'
                ),
            ],
            name='fields00101m1'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='values of the fields are checked for equality: \ntype is decimal, values are 3.0 and -3 (valid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='The equality and inequality conditions appealed to in checking these \n                             constraints apply to the value of the fields selected, so that for example \n                             3.0 and 3 would be conflicting keys if they were both number, but \n                             non-conflicting if they were both strings, or one was a string and \n                             one a number.\n                              In the test the fields of type decimal have values 3.0 and \n                             -3.'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/fields/fields00201m/fields00201m1.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='fields00201m1'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../sunData/IdConstrDefs/fields/fields00201m/fields00201m1_p.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name='Positive'
                ),
            ],
            name='fields00201m1'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='values of the fields are checked for equality: \ntype is decimal, values are 3.0 and 3 (valid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='The equality and inequality conditions appealed to in checking these \n                             constraints apply to the value of the fields selected, so that for example \n                             3.0 and 3 would be conflicting keys if they were both number, but \n                             non-conflicting if they were both strings, or one was a string and \n                             one a number.\n                              In the test the fields of type decimal have values 3.0 and \n                             3.'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/fields/fields00201m/fields00201m2.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='fields00201m2'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../sunData/IdConstrDefs/fields/fields00201m/fields00201m2_n.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name='Negative'
                ),
            ],
            name='fields00201m2'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='values of the fields are checked for equality: \ntype is decimal, values are 3.0 and 3.0 (valid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='The equality and inequality conditions appealed to in checking these \n                             constraints apply to the value of the fields selected, so that for example \n                             3.0 and 3 would be conflicting keys if they were both number, but \n                             non-conflicting if they were both strings, or one was a string and \n                             one a number.\n                              In the test the fields of type decimal have values 3.0 and \n                             3.0.'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/fields/fields00201m/fields00201m3.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='fields00201m3'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../sunData/IdConstrDefs/fields/fields00201m/fields00201m3_n.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name='Negative'
                ),
            ],
            name='fields00201m3'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='values of the fields are checked for equality: \ntype is string, values are 3.0 and 3 (valid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='The equality and inequality conditions appealed to in checking these \n                             constraints apply to the value of the fields selected, so that for example \n                             3.0 and 3 would be conflicting keys if they were both number, but \n                             non-conflicting if they were both strings, or one was a string and \n                             one a number.\n                              In the test the fields of type string have values 3.0 and \n                             3.'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/fields/fields00201m/fields00201m4.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='fields00201m4'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../sunData/IdConstrDefs/fields/fields00201m/fields00201m4_p.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name='Positive'
                ),
            ],
            name='fields00201m4'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='values of the fields are checked for equality: \ntype is string, values are 3.0 and 3.0 (valid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='The equality and inequality conditions appealed to in checking these \n                             constraints apply to the value of the fields selected, so that for example \n                             3.0 and 3 would be conflicting keys if they were both number, but \n                             non-conflicting if they were both strings, or one was a string and \n                             one a number.\n                              In the test the fields of type string have values 3.0 and \n                             3.0.'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/fields/fields00201m/fields00201m5.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='fields00201m5'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../sunData/IdConstrDefs/fields/fields00201m/fields00201m5_n.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name='Negative'
                ),
            ],
            name='fields00201m5'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='values of the fields are checked for equality: \nstring(3.0) compares with decimal(-3) (valid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='The equality and inequality conditions appealed to in checking these \n                             constraints apply to the value of the fields selected, so that for example \n                             3.0 and 3 would be conflicting keys if they were both number, but \n                             non-conflicting if they were both strings, or one was a string and \n                             one a number.\n                              In the test the first field of type string has value "3.0". The\n                             second field of type decimal has value "-3".'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/fields/fields00202m/fields00202m1.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='fields00202m1'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../sunData/IdConstrDefs/fields/fields00202m/fields00202m1_p.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name='Positive'
                ),
            ],
            name='fields00202m1'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='values of the fields are checked for equality: \nstring(3.0) compares with decimal(3) (valid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='The equality and inequality conditions appealed to in checking these \n                             constraints apply to the value of the fields selected, so that for example \n                             3.0 and 3 would be conflicting keys if they were both number, but \n                             non-conflicting if they were both strings, or one was a string and \n                             one a number.\n                              In the test the first field of type string has value "3.0". The\n                             second field of type decimal has value "3".'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/fields/fields00202m/fields00202m2.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='fields00202m2'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../sunData/IdConstrDefs/fields/fields00202m/fields00202m2_p.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name='Positive'
                ),
            ],
            name='fields00202m2'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='values of the fields are checked for equality: \nstring(3.0) compares with decimal(3.0) (valid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='The equality and inequality conditions appealed to in checking these \n                             constraints apply to the value of the fields selected, so that for example \n                             3.0 and 3 would be conflicting keys if they were both number, but \n                             non-conflicting if they were both strings, or one was a string and \n                             one a number.\n                              In the test the first field of type string has value "3.0". The\n                             second field of type decimal has value "3.0".'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/fields/fields00202m/fields00202m3.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='fields00202m3'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../sunData/IdConstrDefs/fields/fields00202m/fields00202m3_p.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name='Positive'
                ),
            ],
            name='fields00202m3'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='values of the fields are checked for equality: \nstring(3.0) compares with string(3) (valid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='The equality and inequality conditions appealed to in checking these \n                             constraints apply to the value of the fields selected, so that for example \n                             3.0 and 3 would be conflicting keys if they were both number, but \n                             non-conflicting if they were both strings, or one was a string and \n                             one a number.\n                              In the test the first field of type string has value "3.0". The\n                             second field of type string has value "3".'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/fields/fields00202m/fields00202m4.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='fields00202m4'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../sunData/IdConstrDefs/fields/fields00202m/fields00202m4_p.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name='Positive'
                ),
            ],
            name='fields00202m4'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='values of the fields are checked for equality: \nstring(3.0) compares with string(3.0) (valid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='The equality and inequality conditions appealed to in checking these \n                             constraints apply to the value of the fields selected, so that for example \n                             3.0 and 3 would be conflicting keys if they were both number, but \n                             non-conflicting if they were both strings, or one was a string and \n                             one a number.\n                              In the test the first field of type string has value "3.0". The\n                             second field of type string has value "3.0".'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/fields/fields00202m/fields00202m5.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='fields00202m5'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../sunData/IdConstrDefs/fields/fields00202m/fields00202m5_n.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name='Negative'
                ),
            ],
            name='fields00202m5'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='values of the fields are checked for equality: \ndecimal(3.0) compares with decimal(-3) (valid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='The equality and inequality conditions appealed to in checking these \n                             constraints apply to the value of the fields selected, so that for example \n                             3.0 and 3 would be conflicting keys if they were both number, but \n                             non-conflicting if they were both strings, or one was a string and \n                             one a number.\n                              In the test the fields have local type decimal and\n                             values "3.0" and "-3".'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/fields/fields00203m/fields00203m1.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='fields00203m1'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../sunData/IdConstrDefs/fields/fields00203m/fields00203m1_p.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name='Positive'
                ),
            ],
            name='fields00203m1'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='values of the fields are checked for equality: \ndecimal(3.0) compares with decimal(3) (valid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='The equality and inequality conditions appealed to in checking these \n                             constraints apply to the value of the fields selected, so that for example \n                             3.0 and 3 would be conflicting keys if they were both number, but \n                             non-conflicting if they were both strings, or one was a string and \n                             one a number.\n                              In the test the fields have local type decimal and\n                             values "3.0" and "3".'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/fields/fields00203m/fields00203m2.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='fields00203m2'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../sunData/IdConstrDefs/fields/fields00203m/fields00203m2_n.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name='Negative'
                ),
            ],
            name='fields00203m2'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='values of the fields are checked for equality: \ndecimal(3.0) compares with decimal(3.0) (valid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='The equality and inequality conditions appealed to in checking these \n                             constraints apply to the value of the fields selected, so that for example \n                             3.0 and 3 would be conflicting keys if they were both number, but \n                             non-conflicting if they were both strings, or one was a string and \n                             one a number.\n                              In the test the fields have local type decimal and\n                             values "3.0" and "3.0".'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/fields/fields00203m/fields00203m3.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='fields00203m3'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../sunData/IdConstrDefs/fields/fields00203m/fields00203m3_n.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name='Negative'
                ),
            ],
            name='fields00203m3'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='values of the fields are checked for equality: \nstring(3.0) compares with string(3) (valid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='The equality and inequality conditions appealed to in checking these \n                             constraints apply to the value of the fields selected, so that for example \n                             3.0 and 3 would be conflicting keys if they were both number, but \n                             non-conflicting if they were both strings, or one was a string and \n                             one a number.\n                              In the test the fields have local type string and\n                             values "3.0" and "3".'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/fields/fields00203m/fields00203m4.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='fields00203m4'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../sunData/IdConstrDefs/fields/fields00203m/fields00203m4_p.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name='Positive'
                ),
            ],
            name='fields00203m4'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='values of the fields are checked for equality: \nstring(3.0) compares with string(3.0) (valid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='The equality and inequality conditions appealed to in checking these \n                             constraints apply to the value of the fields selected, so that for example \n                             3.0 and 3 would be conflicting keys if they were both number, but \n                             non-conflicting if they were both strings, or one was a string and \n                             one a number.\n                              In the test the fields have local type string and\n                             values "3.0" and "3.0".'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/fields/fields00203m/fields00203m5.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='fields00203m5'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../sunData/IdConstrDefs/fields/fields00203m/fields00203m5_n.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name='Negative'
                ),
            ],
            name='fields00203m5'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='In one namespace Identity-constraint definition names must be unique: \nthe names are KEY0 and KEY1  (valid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Declare an element. Define a key identity constraint. \n                             Define another key identity constraint with \n                             another name.\n                             Check that the schema is valid.'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/name/name00101m/name00101m1.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='name00101m1'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../sunData/IdConstrDefs/name/name00101m/name00101m1_p.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name='Positive'
                ),
            ],
            name='name00101m1'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='In one namespace Identity-constraint definition names must be unique: \nthe names are KEY1 and KEY1  (invalid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Declare an element. Define a key identity constraint. \n                             Define another key identity constraint with \n                             the same name.\n                             Check that the schema is invalid.'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/name/name00101m/name00101m2.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='name00101m2'
            ),
            name='name00101m2'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='constraints have separate symbol space (valid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='With the same name declare a global element, a local element, an attribute, define a type \n                             and a constraint. Check that there is no name clash.'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/name/name00201m/name00201m1.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='name00201m1'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../sunData/IdConstrDefs/name/name00201m/name00201m1_p.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name='Positive'
                ),
            ],
            name='name00201m1'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Identity-constraint definition identities must be unique: different namespaces  (valid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Declare an element. Define a key identity constraint and a keyref to that key inside the\n                             element declaration. Declare another element with the same key and keyref.\n                             Check that if the second element declaration is in the same namespace,\n                             that the schema is invalid, otherwise it is valid.'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/targetNS/targetNS00101m/targetNS00101m1.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='targetNS00101m1'
            ),
            instance_test=[
                InstanceTest(
                    instance_document=InstanceDocument(
                        href='../sunData/IdConstrDefs/targetNS/targetNS00101m/targetNS00101m1_p.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2005, 6, 21)
                    ),
                    name='Positive'
                ),
            ],
            name='targetns00101m1'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Identity-constraint definition identities must be unique: the same namespace  (invalid schema)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Declare an element. Define a key identity constraint and a keyref to that key inside the\n                             element declaration. Declare another element with the same key and keyref.\n                             Check that if the second element declaration is in the same namespace,\n                             that the schema is invalid, otherwise it is valid.'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#cIdentity-constraint_Definitions'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../sunData/IdConstrDefs/targetNS/targetNS00101m/targetNS00101m2.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2005, 6, 21)
                ),
                name='targetNS00101m2'
            ),
            name='targetns00101m2'
        ),
    ],
    contributor='SUN',
    name='IdConstrDefs',
    other_attributes={
        '{http://www.w3.org/2001/XMLSchema-instance}schemaLocation': 'http://www.w3.org/XML/2004/xml-schema-test-suite/ ../common/xsts.xsd',
    }
)
