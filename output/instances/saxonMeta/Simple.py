from output.models.common.xsts_xsd.xsts import Annotation
from output.models.common.xsts_xsd.xsts import Current
from output.models.common.xsts_xsd.xsts import Documentation
from output.models.common.xsts_xsd.xsts import DocumentationReference
from output.models.common.xsts_xsd.xsts import Expected
from output.models.common.xsts_xsd.xsts import ExpectedOutcome
from output.models.common.xsts_xsd.xsts import InstanceDocument
from output.models.common.xsts_xsd.xsts import InstanceTest
from output.models.common.xsts_xsd.xsts import KnownToken
from output.models.common.xsts_xsd.xsts import Prior
from output.models.common.xsts_xsd.xsts import SchemaDocument
from output.models.common.xsts_xsd.xsts import SchemaTest
from output.models.common.xsts_xsd.xsts import Status
from output.models.common.xsts_xsd.xsts import TestGroup
from output.models.common.xsts_xsd.xsts import TestSet
from xsdata.formats.dataclass.models.generics import AnyElement
from xsdata.models.datatype import XmlDate


obj = TestSet(
    test_group=[
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='+INF allowed in xs:double lexical space'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='+INF allowed in xs:double lexical space in XSD 1.1'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-LexicalRepForFloatAndDouble'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple001.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 8)
                ),
                name='simple001.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Valid, +INF used legitimately.\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple001.v01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 8)
                    ),
                    name='simple001.v01.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid, -INF conflicts with fixed value.\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple001.n01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 8)
                    ),
                    name='simple001.n01.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid, NaN conflicts with fixed value.\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple001.n02.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 8)
                    ),
                    name='simple001.n02.xml'
                ),
            ],
            name='simple001'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='+INF allowed in xs:float lexical space'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='+INF allowed in xs:float lexical space in XSD 1.1'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-LexicalRepForFloatAndDouble'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple002.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 8)
                ),
                name='simple002.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Valid, +INF used legitimately.\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple001.v01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 8)
                    ),
                    name='simple002.v01.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid, -INF conflicts with fixed value.\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple001.n01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 8)
                    ),
                    name='simple002.n01.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid, NaN conflicts with fixed value.\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple001.n02.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 8)
                    ),
                    name='simple002.n02.xml'
                ),
            ],
            name='simple002'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Test that simpleType/@final = extension is allowed'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Depends on resolution of spec bug 2074'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='https://www.w3.org/Bugs/Public/show_bug.cgi?id=2074'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple003.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2012, 4, 25)
                ),
                name='simple003.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Valid, the simpleType that prohibits extension is not extended.\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple003.v01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2012, 4, 25)
                    ),
                    name='simple003.v01.xml'
                ),
            ],
            name='simple003'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Test that simpleType/@final = extension is allowed, and works'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Depends on resolution of spec bug 2074'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='https://www.w3.org/Bugs/Public/show_bug.cgi?id=2074'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t\t                Invalid, the simpleType that prohibits extension gets extended.\n\t\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple004.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2012, 4, 25)
                ),
                name='simple004.xsd'
            ),
            name='simple004'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Test simpleType/@final = extension defaulted from finalDefault, and works'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Depends on resolution of spec bug 2074'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='https://www.w3.org/Bugs/Public/show_bug.cgi?id=2074'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t\t                Invalid, the simpleType that prohibits extension gets extended.\n\t\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple005.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2012, 4, 25)
                ),
                name='simple005.xsd'
            ),
            name='simple005'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='List type with a missing item type'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Marked invalid here, though one could argue for "valid" under\n                section 5.3, missing components'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t\t                Invalid, the list type refers to a non-existent item type.\n\t\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple006.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2012, 4, 25)
                ),
                name='simple006.xsd'
            ),
            name='simple006'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Type X is substitutable for union(X,Y)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Union is substitutable by one of the member types'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-UnionTypes-DerivedByRestrFrom'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple010.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 8)
                ),
                name='simple010.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Valid\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple010.v01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 8)
                    ),
                    name='simple010.v01.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple010.n01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 8)
                    ),
                    name='simple010.n01.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple010.n02.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 8)
                    ),
                    name='simple010.n02.xml'
                ),
            ],
            name='simple010'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Union(X,Y) is not validly derived from Union(X,Y,Z)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text="Doesn't make much sense, but that's what the spec says."
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-UnionTypes-DerivedByRestrFrom'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple011.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 8)
                ),
                name='simple011.xsd'
            ),
            name='simple011'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Type X is substitutable for union(X,Y) when X is itself a union type'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Union is substitutable by one of the member types when that member type is a union'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-UnionTypes-DerivedByRestrFrom'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple012.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 8)
                ),
                name='simple012.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Valid\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple012.v01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 8)
                    ),
                    name='simple012.v01.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Valid use of xsi:type here\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple012.v02.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 8)
                    ),
                    name='simple012.v02.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple012.n01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 8)
                    ),
                    name='simple012.n01.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple012.n02.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 8)
                    ),
                    name='simple012.n02.xml'
                ),
            ],
            name='simple012'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Type D is substitutable for union(X,DT) when DT is union (D,T)'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Tests substitutability of transitive membership of the union'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-UnionTypes-DerivedByRestrFrom'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple013.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 8)
                ),
                name='simple013.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Valid\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple013.v01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 8)
                    ),
                    name='simple013.v01.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple013.n01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 8)
                    ),
                    name='simple013.n01.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple013.n02.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 8)
                    ),
                    name='simple013.n02.xml'
                ),
            ],
            name='simple013'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Member of a union is not substitutable if the union is derived by restriction'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Tests substitutability of transitive membership of the union'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-UnionTypes-DerivedByRestrFrom'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple014.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 11)
                ),
                name='simple014.xsd'
            ),
            name='simple014'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Member of a union is not substitutable if the union is derived by restriction'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Tests substitutability of transitive membership of the union'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-UnionTypes-DerivedByRestrFrom'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple015.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 11)
                ),
                name='simple015.xsd'
            ),
            name='simple015'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='xsi:type OK to select a member of a union only if there are no restriction facets'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='xsi:type OK to select a member of a union only if there are no restriction facets'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-UnionTypes-XSITypeUsedAsMember'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple016.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 8)
                ),
                name='simple016.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Valid, xsi:type is OK here as the union is unrestricted\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple016.v01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 8)
                    ),
                    name='simple016.v01.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid, xsi:type cannot be used here as the union is restricted.\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple016.n01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 8)
                    ),
                    name='simple016.n01.xml'
                ),
            ],
            name='simple016'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='The transitive membership of a union type must not contain the union itself'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='The transitive membership of a union type must not contain the union itself'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-UnionTypes-Cyclicity'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid, cyclic union definition\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple017.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 11)
                ),
                name='simple017.xsd'
            ),
            name='simple017'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='The transitive membership of a union type must not contain a type derived from the union'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='The transitive membership of a union type must not contain a type derived from the union'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-UnionTypes-Cyclicity'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid, cyclic union definition\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple018.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 11)
                ),
                name='simple018.xsd'
            ),
            name='simple018'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='The transitive membership of a union type must not contain a type constructed from the union'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='The transitive membership of a union type must not contain a type constructed from the union'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-UnionTypes-Cyclicity'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid, cyclic union definition\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple019.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 11)
                ),
                name='simple019.xsd'
            ),
            name='simple019'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='The transitive membership of a union type must not contain a type constructed from the union'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='The transitive membership of a union type must not contain a type constructed from the union'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-UnionTypes-Cyclicity'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid, cyclic union definition\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple020.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 11)
                ),
                name='simple020.xsd'
            ),
            name='simple020'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='The string "[^]" is not a valid regex'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='The string "[^]" is not a valid regex'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-2/#charcter-classes'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid regular expression in pattern facet\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple021.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 1, 25)
                ),
                name='simple021.xsd'
            ),
            name='simple021'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Enumeration value OK if "equal or identical", so NaN is accepted. See bug 9196'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Enumeration value OK if "equal or identical", so NaN is accepted. See bug 9196'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-IdentityAndEquality'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple022.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 6)
                ),
                name='simple022.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Valid, Enumeration value OK if "equal or identical"\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple022.v01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 2, 6)
                    ),
                    name='simple022.v01.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Valid, Enumeration value OK if "equal or identical"\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple022.v02.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 2, 6)
                    ),
                    name='simple022.v02.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Valid, Enumeration value OK if "equal or identical"\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple022.v03.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 2, 6)
                    ),
                    name='simple022.v03.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid, Enumeration value OK only if "equal or identical".\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple022.n01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2011, 2, 6)
                    ),
                    name='simple016.n01.xml'
                ),
            ],
            name='simple022'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Hyphens in regular expressions'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Tests use of hyphens in regular expressions'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-HyphensAndBracketsInRegex'
                ),
            ],
            schema_test=SchemaTest(
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple040.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 11)
                ),
                name='simple040.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Valid, \n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple040.v01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 8)
                    ),
                    name='simple040.v01.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid, \n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple040.n01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 8)
                    ),
                    name='simple040.n01.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid, \n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple040.n02.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 8)
                    ),
                    name='simple040.n02.xml'
                ),
            ],
            name='simple040'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Hyphens in regular expressions'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Tests use of hyphens in regular expressions'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-HyphensAndBracketsInRegex'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid, cyclic union definition\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple041.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 11)
                ),
                name='simple041.bad.xsd'
            ),
            name='simple041'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Hyphens in regular expressions'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Tests use of hyphens in regular expressions'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-HyphensAndBracketsInRegex'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid, cyclic union definition\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple042.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 11)
                ),
                name='simple042.bad.xsd'
            ),
            name='simple042'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Hyphens in regular expressions'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Tests use of hyphens in regular expressions'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-HyphensAndBracketsInRegex'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                this regex becomes legal by a decision of the WG in Nov 2010. See bug 13922.\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple043.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 10, 7)
                ),
                prior=[
                    Prior(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 11)
                    ),
                ],
                name='simple043.xsd'
            ),
            name='simple043'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Hyphens in regular expressions'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Tests use of hyphens in regular expressions'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-HyphensAndBracketsInRegex'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                valid regex\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple044.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 11)
                ),
                name='simple044.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Valid, \n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple044.v01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 11)
                    ),
                    name='simple044.v01.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid, \n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple044.n01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 11)
                    ),
                    name='simple044.n01.xml'
                ),
            ],
            name='simple044'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Hyphens in regular expressions'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Tests use of hyphens in regular expressions'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-HyphensAndBracketsInRegex'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                valid regex\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple045.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 11)
                ),
                name='simple045.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Valid, \n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple045.v01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 11)
                    ),
                    name='simple045.v01.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid, \n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple045.n01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 11)
                    ),
                    name='simple045.n01.xml'
                ),
            ],
            name='simple045'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Hyphens in regular expressions'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Tests use of hyphens in regular expressions'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-HyphensAndBracketsInRegex'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                valid regex\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple046.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 11)
                ),
                name='simple046.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Valid, \n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple046.v01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 11)
                    ),
                    name='simple046.v01.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid, \n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple046.n01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 11)
                    ),
                    name='simple046.n01.xml'
                ),
            ],
            name='simple046'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Use of xs:anyAtomicType'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Tests use of xs:anyAtomicType as the type of an element declaration'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-AnyAtomicType'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                valid schema using anyAtomicType\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple050.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 11)
                ),
                name='simple050.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Valid, anyAtomicType allows anything\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple050.v01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 11)
                    ),
                    name='simple050.v01.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Valid xsi:type restricting to a date\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple050.v02.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 11)
                    ),
                    name='simple050.v02.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid, if restricting to a date the date must be valid\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple050.n01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 11)
                    ),
                    name='simple050.n01.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid, restricting to an unknown type\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple050.n02.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 11)
                    ),
                    name='simple050.n02.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid, restricting to untypedAtomic\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple050.n03.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 10, 11)
                    ),
                    name='simple050.n03.xml'
                ),
            ],
            name='simple050'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Use of xs:anyAtomicType'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Cannot use xs:anyAtomicType as the base type of a restriction'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-AnyAtomicType'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema using anyAtomicType\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple051.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 10, 11)
                ),
                name='simple050.xsd'
            ),
            name='simple051'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Use of xs:anyAtomicType'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Tests use of xs:anyAtomicType as the item type of a list.\n                This has been disallowed in consequence of the resolution of bug 11103'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-AnyAtomicType'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema using anyAtomicType as the item type of a list\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple052.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 7)
                ),
                name='simple052.xsd'
            ),
            name='simple052'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Use of xs:anyAtomicType'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Tests use of xs:anyAtomicType as the member type of a union.\n                Union of xs:anyAtomicType is not allowed, as a consequence of the resolution of bug 11103'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-AnyAtomicType'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema using anyAtomicType as a member type in a union\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple053.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 7)
                ),
                name='simple053.xsd'
            ),
            name='simple053'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='xsi:type must resolve'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text="xsi:type isn't one of the member type of a union, in fact it doesn't exist"
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
                DocumentationReference(
                    href='../common/XSD1_1TestCategories.xml#xsd1_1-Misc-XSITypeMustResolve'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                valid schema using a union\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple054.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2010, 11, 17)
                ),
                name='simple054.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid, unknown xsi:type\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple054.n01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2010, 11, 17)
                    ),
                    name='simple053.n01.xml'
                ),
            ],
            name='simple054'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Selector in identity constraint mistakenly identifies an element with a simple type'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Not an error in the schema, though Saxon gives a warning: it causes all instances to be invalid.'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                schema is valid though not useful\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple055.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2012, 4, 27)
                ),
                name='simple055.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Invalid, field of selector selects nothing\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple055.n01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2012, 4, 28)
                    ),
                    name='simple055.n01.xml'
                ),
            ],
            name='simple055'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Facet must not appear more than once'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Facet must not appear more than once'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#st-props-correct'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema, facet is repeated violating clause 1 of \n\t                Simple Type Definition Representation OK\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple060.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 21)
                ),
                name='simple060.xsd'
            ),
            name='simple060'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Facet must not appear more than once'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Facet must not appear more than once'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#st-props-correct'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema, facet is repeated violating clause 1 of \n\t                Simple Type Definition Representation OK\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple061.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 21)
                ),
                name='simple061.xsd'
            ),
            name='simple061'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Facet must not appear more than once'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Facet must not appear more than once'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#st-props-correct'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema, facet is repeated violating clause 1 of \n\t                Simple Type Definition Representation OK\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple062.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 21)
                ),
                name='simple062.xsd'
            ),
            name='simple062'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Facet must not appear more than once'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Facet must not appear more than once'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#st-props-correct'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema, facet is repeated violating clause 1 of \n\t                Simple Type Definition Representation OK\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple063.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 21)
                ),
                name='simple063.xsd'
            ),
            name='simple063'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Facet must not appear more than once'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Facet must not appear more than once'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#st-props-correct'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema, facet is repeated violating clause 1 of \n\t                Simple Type Definition Representation OK\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple064.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 21)
                ),
                name='simple064.xsd'
            ),
            name='simple064'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Facet must not appear more than once'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Facet must not appear more than once'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#st-props-correct'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema, facet is repeated violating clause 1 of \n\t                Simple Type Definition Representation OK\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple065.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 21)
                ),
                name='simple065.xsd'
            ),
            name='simple065'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Facet must not appear more than once'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Facet must not appear more than once'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#st-props-correct'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema, facet is repeated violating clause 1 of \n\t                Simple Type Definition Representation OK\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple066.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 21)
                ),
                name='simple066.xsd'
            ),
            name='simple066'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Facet must not appear more than once'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Facet must not appear more than once'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#st-props-correct'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema, facet is repeated violating clause 1 of \n\t                Simple Type Definition Representation OK\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple067.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 21)
                ),
                name='simple067.xsd'
            ),
            name='simple067'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Facet must not appear more than once'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Facet must not appear more than once'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#st-props-correct'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema, facet is repeated violating clause 1 of \n\t                Simple Type Definition Representation OK\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple068.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 21)
                ),
                name='simple068.xsd'
            ),
            name='simple068'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Facet must not appear more than once'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Facet must not appear more than once'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#st-props-correct'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema, facet is repeated violating clause 1 of \n\t                Simple Type Definition Representation OK\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple069.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 21)
                ),
                name='simple069.xsd'
            ),
            name='simple069'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Facet must not appear more than once'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Facet must not appear more than once'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#st-props-correct'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema, facet is repeated violating clause 1 of \n\t                Simple Type Definition Representation OK\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple070.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 21)
                ),
                name='simple070.xsd'
            ),
            name='simple070'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Facet must not appear more than once'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Facet must not appear more than once'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#st-props-correct'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema, facet is repeated violating clause 1 of \n\t                Simple Type Definition Representation OK\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple071.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 21)
                ),
                name='simple071.xsd'
            ),
            name='simple071'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Facet must not appear more than once'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Facet must not appear more than once'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#st-props-correct'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema, facet is repeated violating clause 1 of \n\t                Simple Type Definition Representation OK\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple072.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 21)
                ),
                name='simple072.xsd'
            ),
            name='simple072'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Facet must not appear more than once'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Facet must not appear more than once'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#st-props-correct'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema, facet is repeated violating clause 1 of \n\t                Simple Type Definition Representation OK\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple073.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 21)
                ),
                name='simple073.xsd'
            ),
            name='simple073'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Facet must not appear more than once'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Facet must not appear more than once'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#st-props-correct'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema, facet is repeated violating clause 1 of \n\t                Simple Type Definition Representation OK\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple074.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 21)
                ),
                name='simple074.xsd'
            ),
            name='simple074'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Facet must not appear more than once'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Facet must not appear more than once'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#st-props-correct'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema, facet is repeated violating clause 1 of \n\t                Simple Type Definition Representation OK\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple075.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 21)
                ),
                name='simple075.xsd'
            ),
            name='simple075'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Facet must not appear more than once'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Facet must not appear more than once'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#st-props-correct'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema, facet is repeated violating clause 1 of \n\t                Simple Type Definition Representation OK\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple076.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 21)
                ),
                name='simple076.xsd'
            ),
            name='simple076'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Facet must not appear more than once'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Facet must not appear more than once'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#st-props-correct'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema, facet is repeated violating clause 1 of \n\t                Simple Type Definition Representation OK\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple077.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 21)
                ),
                name='simple077.xsd'
            ),
            name='simple077'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Facet must not appear more than once'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Facet must not appear more than once'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#st-props-correct'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema, facet is repeated violating clause 1 of \n\t                Simple Type Definition Representation OK\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple078.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 21)
                ),
                name='simple078.xsd'
            ),
            name='simple078'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Facet must not appear more than once'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Facet must not appear more than once'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#st-props-correct'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema, facet is repeated violating clause 1 of \n\t                Simple Type Definition Representation OK\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple079.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 21)
                ),
                name='simple079.xsd'
            ),
            name='simple079'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Facet must not appear more than once'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Facet must not appear more than once'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#st-props-correct'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema, facet is repeated violating clause 1 of \n\t                Simple Type Definition Representation OK\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple080.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 21)
                ),
                name='simple080.xsd'
            ),
            name='simple080'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Facet must not appear more than once'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Facet must not appear more than once'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#st-props-correct'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema, facet is repeated violating clause 1 of \n\t                Simple Type Definition Representation OK\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple081.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 21)
                ),
                name='simple081.xsd'
            ),
            name='simple081'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Facet must not appear more than once'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Facet must not appear more than once'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#st-props-correct'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema, facet is repeated violating clause 1 of \n\t                Simple Type Definition Representation OK\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple082.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 21)
                ),
                name='simple082.xsd'
            ),
            name='simple082'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Facet must not appear more than once'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Facet must not appear more than once'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#st-props-correct'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema, facet is repeated violating clause 1 of \n\t                Simple Type Definition Representation OK\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple083.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 21)
                ),
                name='simple083.xsd'
            ),
            name='simple083'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Facet must not appear more than once'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Facet must not appear more than once'
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema11-1/#st-props-correct'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                invalid schema, facet is repeated violating clause 1 of \n\t                Simple Type Definition Representation OK\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple084.bad.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.INVALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2011, 2, 21)
                ),
                name='simple084.xsd'
            ),
            name='simple084'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Union derived by restriction with a pattern facet'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='Pattern facet applies after doing whitespace processing defined\n                             in the member type against which validation succeeded\n                '
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='http://www.w3.org/TR/xmlschema-1/#d0e13819'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n\t                schema is valid\n\t            ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple085.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2014, 12, 5)
                ),
                name='simple085.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n\t\t                Valid; pattern matches the input after whitespace normalization\n\t\t            ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple085.v01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2014, 12, 5)
                    ),
                    name='simple085.v01.xml'
                ),
            ],
            name='simple085'
        ),
        TestGroup(
            annotation=[
                Annotation(
                    appinfo_or_documentation=[
                        Documentation(
                            content=[
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Title',
                                    text='Duration seconds component requires a digit before and after the decimal point'
                                ),
                                AnyElement(
                                    qname='{http://www.w3.org/XML/2004/xml-schema-test-suite/}Description',
                                    text='The BNF for the lexical space in XSD 1.1 (part 2, § 3.3.6.2) suggests that the \n                    seconds component can start or end with a decimal separator, but this disagrees with \n                    the regular expressions in the same section. The BNF is believed to be in error.\n                '
                                ),
                            ]
                        ),
                    ]
                ),
            ],
            documentation_reference=[
                DocumentationReference(
                    href='https://www.w3.org/TR/xmlschema11-2/#duration'
                ),
            ],
            schema_test=SchemaTest(
                annotation=[
                    Annotation(
                        appinfo_or_documentation=[
                            Documentation(
                                content=[
                                    '\n                    schema is valid\n                ',
                                ]
                            ),
                        ]
                    ),
                ],
                schema_document=[
                    SchemaDocument(
                        href='../saxonData/Simple/simple086.xsd'
                    ),
                ],
                expected=[
                    Expected(
                        validity=ExpectedOutcome.VALID
                    ),
                ],
                current=Current(
                    status=Status.ACCEPTED,
                    date=XmlDate(2023, 9, 14)
                ),
                name='simple086.xsd'
            ),
            instance_test=[
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Valid; pattern matches the input after whitespace normalization\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple086.v01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.VALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2023, 9, 14)
                    ),
                    name='simple086.v01.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid; trailing "." not allowed\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple086.n01.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2023, 9, 14)
                    ),
                    name='simple086.n01.xml'
                ),
                InstanceTest(
                    annotation=[
                        Annotation(
                            appinfo_or_documentation=[
                                Documentation(
                                    content=[
                                        '\n                    Invalid; leading "." not allowed\n                ',
                                    ]
                                ),
                            ]
                        ),
                    ],
                    instance_document=InstanceDocument(
                        href='../saxonData/Simple/simple086.n02.xml'
                    ),
                    expected=[
                        Expected(
                            validity=ExpectedOutcome.INVALID
                        ),
                    ],
                    current=Current(
                        status=Status.ACCEPTED,
                        date=XmlDate(2023, 9, 14)
                    ),
                    name='simple086.n02.xml'
                ),
            ],
            name='simple086'
        ),
    ],
    contributor='Saxonica',
    name='Simple',
    version=[
        KnownToken.VALUE_1_1,
    ],
    other_attributes={
        '{http://www.w3.org/2001/XMLSchema-instance}schemaLocation': 'http://www.w3.org/XML/2004/xml-schema-test-suite/ ../common/xsts.xsd',
    }
)
